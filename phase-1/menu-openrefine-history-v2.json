[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "from": [
          "DINNER",
          "dinner",
          "[DINNER]",
          "Dinner",
          "(DINNER)",
          "DINNER;",
          "DINNER (?)",
          "DINNER(?)",
          "[DINNER?]",
          "(?DINNER?)",
          "DINNER,",
          "DINNER?",
          "[?DINNER?]",
          "[DINNER ?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column venue using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column venue using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "physical_description",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column physical_description using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "physical_description",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column physical_description using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "notes",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column notes using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "notes",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column notes using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "call_number",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column call_number using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "call_number",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column call_number using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "keywords",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column keywords using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "keywords",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column keywords using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "language",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column language using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "language",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column language using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "date",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column date using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "date",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column date using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "date",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column date using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location_type",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location_type using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location_type",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location_type using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency_symbol",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency_symbol using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency_symbol",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency_symbol using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "status",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column status using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "status",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column status using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "page_count",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column page_count using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "page_count",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column page_count using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "dish_count",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column dish_count using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "dish_count",
    "expression": "value.replace(/[\\p{Zs}\\s]+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column dish_count using expression value.replace(/[\\p{Zs}\\s]+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "date",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column date using expression value.toDate()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "page_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column page_count using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "dish_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column dish_count using expression value.toNumber()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "from": [
          "[Restaurant name and/or location not given]",
          "Restaurant name and/or location not given]",
          "Restaurant name and/or location not given",
          "[Restaurant name and/or location not given"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NA"
      },
      {
        "from": [
          "The Merchant's Club",
          "The Merchants Club",
          "The Merchants' Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchant's Club"
      },
      {
        "from": [
          "Hotel Imperial",
          "Imperial Hotel",
          "Impérial Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Imperial"
      },
      {
        "from": [
          "Delmonicos",
          "Delmonico's",
          "Delmonicos."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos"
      },
      {
        "from": [
          "Riggs'",
          "Rigg's",
          "Riggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Riggs'"
      },
      {
        "from": [
          "Childs",
          "Child's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Childs"
      },
      {
        "from": [
          "Hotel Marie Antoinette",
          "Marie Antoinette Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Marie Antoinette"
      },
      {
        "from": [
          "Healy's Forty-second Street restaurant",
          "Healy's Forty-second Street Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Healy's Forty-second Street Restaurant"
      },
      {
        "from": [
          "Hotel Knickerbocker",
          "Knickerbocker Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Knickerbocker"
      },
      {
        "from": [
          "Met-Life Building",
          "MetLife Building"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Met-Life Building"
      },
      {
        "from": [
          "[Not Given]",
          "[Not given]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NA"
      },
      {
        "from": [
          "S.S. \"Frederik VIII\"",
          "S.S. Frederik VIII"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Frederik VIII"
      },
      {
        "from": [
          "Fairmont Hotel",
          "Hotel Fairmont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fairmont Hotel"
      },
      {
        "from": [
          "Copley-Plaza Hotel",
          "Hotel Copley-Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley-Plaza Hotel"
      },
      {
        "from": [
          "St. Denis Hotel",
          "Hotel St. Denis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "Cosmopolitan Hotel",
          "Cosmopolitan... Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cosmopolitan Hotel"
      },
      {
        "from": [
          "Hotel Pontchartrain",
          "Pontchartrain Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pontchartrain"
      },
      {
        "from": [
          "Hotel Astor",
          "Astor Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Astor"
      },
      {
        "from": [
          "Palace Hotel",
          "Palace Hôtel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel"
      },
      {
        "from": [
          "Hotel DuPont",
          "Hotel duPont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel DuPont"
      },
      {
        "from": [
          "Rigg's Twentieth Street Restaurant",
          "Riggs' Twentieth Street Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Riggs' Twentieth Street Restaurant"
      },
      {
        "from": [
          "Adams' Restaurant",
          "Adam's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adams' Restaurant"
      },
      {
        "from": [
          "Fraunces' Tavern",
          "Fraunces Tavern"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fraunces' Tavern"
      },
      {
        "from": [
          "Grocers Hall",
          "Grocers' Hall"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grocers Hall"
      },
      {
        "from": [
          "Mercantile Lunch Co.",
          "Mercantile lunch Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mercantile Lunch Co."
      },
      {
        "from": [
          "Hotel Statler",
          "Statler Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Statler"
      },
      {
        "from": [
          "U.S.S. New York",
          "U.S.S. New York (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. New York"
      },
      {
        "from": [
          "Lafayette Hotel",
          "Hotel Lafayette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lafayette Hotel"
      },
      {
        "from": [
          "The New Willard Hotel",
          "The New Willard Hotel."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Willard Hotel"
      },
      {
        "from": [
          "Elks Club House",
          "Elks' Club House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Elks Club House"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbräu Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "Merchant's Club",
          "Merchants Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Merchant's Club"
      },
      {
        "from": [
          "Hotel Savoy",
          "Savoy Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy"
      },
      {
        "from": [
          "Café Boulevard",
          "Cafe Boulevard"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café Boulevard"
      }
    ],
    "description": "Mass edit cells in column name"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "from": [
          "LUNCH",
          "lunch",
          "Lunch",
          "[LUNCH]",
          "(?LUNCH?)",
          "LUNCH;",
          "[LUNCH?]",
          "(LUNCH)",
          "LUNCH (?)",
          "LUNCH."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH"
      },
      {
        "from": [
          "BREAKFAST",
          "Breakfast",
          "breakfast",
          "[BREAKFAST]",
          "BREAKFAST;",
          "BREAKFAST (?)",
          "BREAKFAST(?)",
          "[BREAKFAST ?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BREAKFAST"
      },
      {
        "from": [
          "DAILY MENU",
          "daily menu",
          "Daily menu",
          "(DAILY MENU)",
          "DAILY MENU;",
          "[DAILY MENU?]",
          "[DAILY] MENU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY MENU"
      },
      {
        "from": [
          "SUPPER",
          "supper",
          "SUPPER (?)",
          "SUPPER(?)",
          "Supper",
          "SUPPER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SUPPER"
      },
      {
        "from": [
          "LUNCHEON",
          "[LUNCHEON]",
          "LUNCHEON;",
          "Luncheon",
          "luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCHEON"
      },
      {
        "from": [
          "Afternoon tea",
          "AFTERNOON TEA",
          "afternoon tea",
          "afternoon tea ["
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Afternoon tea"
      },
      {
        "from": [
          "WINE LIST",
          "wine list",
          "WINE LIST;",
          "Wine list"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINE LIST"
      },
      {
        "from": [
          "TABLE D'HOTE DINNER",
          "DINNER TABLE D'HOTE",
          "TABLE d'HOTE DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TABLE D'HOTE DINNER"
      },
      {
        "from": [
          "CARTE DU JOUR",
          "(CARTE DU JOUR)",
          "CARTE DU JOUR;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARTE DU JOUR"
      },
      {
        "from": [
          "LUNCH & DINNER",
          "lunch; dinner",
          "[?DINNER? - LUNCH?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH & DINNER"
      },
      {
        "from": [
          "FRUHSTUCK-BREAKFAST",
          "FRUHSTUCK/BREAKFAST",
          "FRUHSTUCK/BREAKFAST;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRUHSTUCK-BREAKFAST"
      },
      {
        "from": [
          "DAILY MENU, DINNER",
          "DAILY DINNER MENU",
          "DAILY MENU; DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY MENU, DINNER"
      },
      {
        "from": [
          "DINNER A LA CARTE",
          "a la carte; dinner",
          "dinner; a la carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER A LA CARTE"
      },
      {
        "from": [
          "MENU",
          "Menu",
          "MENU;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENU"
      },
      {
        "from": [
          "DAILY LUNCH MENU",
          "DAILY MENU, LUNCH",
          "DAILY MENU; LUNCH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY LUNCH MENU"
      },
      {
        "from": [
          "ANNUAL DINNER",
          "Annual Dinner",
          "[ANNUAL DINNER?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNUAL DINNER"
      },
      {
        "from": [
          "DINNER MENU",
          "Dinner Menu",
          "Dinner menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER MENU"
      },
      {
        "from": [
          "LUNCH OR DINNER",
          "DINNER OR LUNCH",
          "LUNCH &/OR DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH OR DINNER"
      },
      {
        "from": [
          "ANNIVERSARY DINNER",
          "ANNIVERSARY DINNER?",
          "ANNIVERSARY [DINNER]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNIVERSARY DINNER"
      },
      {
        "from": [
          "MITTAGESSEN",
          "MITTAG-ESSEN",
          "MITTAGESSEN;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MITTAGESSEN"
      },
      {
        "from": [
          "INSPECTION TRIP - LUNCHEON",
          "INSPECTION TRIP, LUNCHEON",
          "INSPECTION TRIP, LUNCHEON;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "INSPECTION TRIP - LUNCHEON"
      },
      {
        "from": [
          "A LA CARTE",
          "a la carte",
          "a la Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A LA CARTE"
      },
      {
        "from": [
          "BANQUET AND RECEPTION",
          "reception and banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BANQUET AND RECEPTION"
      },
      {
        "from": [
          "DINNER - SECOND CABIN",
          "DINNER SECOND CABIN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER - SECOND CABIN"
      },
      {
        "from": [
          "INSPECTION TRIP, DINNER",
          "INSPECTION TRIP, DINNER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "INSPECTION TRIP, DINNER"
      },
      {
        "from": [
          "MITTAGESSEN/DINNER",
          "MITTAGESSEN[DINNER]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MITTAGESSEN/DINNER"
      },
      {
        "from": [
          "LUNCH MENU",
          "Lunch menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH MENU"
      },
      {
        "from": [
          "DINNER,SECOND CABIN",
          "DINNER-SECOND CABIN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER,SECOND CABIN"
      },
      {
        "from": [
          "REUNION",
          "[?REUNION?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "REUNION"
      },
      {
        "from": [
          "LUNCHEON TABLE D'HOTE",
          "TABLE D'HOTE LUNCHEON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCHEON TABLE D'HOTE"
      },
      {
        "from": [
          "Tea Menu",
          "tea menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tea Menu"
      },
      {
        "from": [
          "LADIES NIGHT",
          "LADIES' NIGHT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LADIES NIGHT"
      },
      {
        "from": [
          "BREAKFAST AND SUPPER",
          "SUPPER AND BREAKFAST"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BREAKFAST AND SUPPER"
      },
      {
        "from": [
          "LUNCHEON MENU",
          "Luncheon Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCHEON MENU"
      },
      {
        "from": [
          "LUNCH A LA CARTE",
          "Lunch A La Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH A LA CARTE"
      },
      {
        "from": [
          "Room service",
          "room service"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Room service"
      },
      {
        "from": [
          "WEDDING(?)",
          "wedding"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WEDDING(?)"
      },
      {
        "from": [
          "RECEPTION",
          "[RECEPTION]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RECEPTION"
      },
      {
        "from": [
          "WASHINGTON'S BIRTHDAY BANQUET",
          "BANQUET (WASHINGTON'S BIRTHDAY?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WASHINGTON'S BIRTHDAY BANQUET"
      },
      {
        "from": [
          "ABEND-ESSEN",
          "ABENDESSEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABEND-ESSEN"
      },
      {
        "from": [
          "BANQUET",
          "Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BANQUET"
      },
      {
        "from": [
          "Breakfast (?) Held By Nordeutscher Lloyd Bremen At On Board The Ss George Washington",
          "Breakfast Held By Nordeutscher Lloyd Bremen At On Board The Ss George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast Held By Nordeutscher Lloyd Bremen At On Board The Ss George Washington"
      },
      {
        "from": [
          "DINER",
          "[DINER]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINER"
      },
      {
        "from": [
          "LUNCH AND DINNER",
          "lunch and dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH AND DINNER"
      },
      {
        "from": [
          "DINNER TO ABOVE",
          "DINNER TO ABOVE;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER TO ABOVE"
      },
      {
        "from": [
          "DAILY LUNCH;",
          "DAILY LUNCH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY LUNCH"
      },
      {
        "from": [
          "LUNCHEON A LA CARTE",
          "LUNCHEON, A LA CARTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCHEON A LA CARTE"
      },
      {
        "from": [
          "LINCOLN'S BIRTHDAY DINNER",
          "DINNER, LINCOLNS BIRTHDAY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LINCOLN'S BIRTHDAY DINNER"
      },
      {
        "from": [
          "NEW YEAR'S DINNER",
          "NEW YEARS DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YEAR'S DINNER"
      },
      {
        "from": [
          "FIFTH ANNUAL DINNER",
          "DINNER, FIFTH ANNUAL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FIFTH ANNUAL DINNER"
      },
      {
        "from": [
          "ST. VALENTINE'S DAY DINNER",
          "ST. VALENTINES DAY DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. VALENTINE'S DAY DINNER"
      },
      {
        "from": [
          "FRUHSTUCK/LUNCH",
          "FRUHSTUCK-LUNCH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRUHSTUCK/LUNCH"
      },
      {
        "from": [
          "TESTIMONIAL DINNER",
          "Testimonial Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TESTIMONIAL DINNER"
      },
      {
        "from": [
          "NEW YEAR'S DAY DINNER",
          "NEW YEARS DAY DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YEAR'S DAY DINNER"
      },
      {
        "from": [
          "EIGHTH ANNUAL BANQUET",
          "EIGHTH ANNUAL BANQUET'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EIGHTH ANNUAL BANQUET"
      },
      {
        "from": [
          "DAILY MENU, BREAKFAST",
          "DAILY BREAKFAST MENU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY BREAKFAST MENU"
      },
      {
        "from": [
          "BREAKFAST MENU",
          "Breakfast Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BREAKFAST MENU"
      },
      {
        "from": [
          "DAILY MENU, LUNCHEON",
          "DAILY LUNCHEON MENU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY LUNCHEON MENU"
      },
      {
        "from": [
          "Daily",
          "DAILY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY"
      },
      {
        "from": [
          "PRIVATE DINNER",
          "[PRIVATE DINNER?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRIVATE DINNER"
      },
      {
        "from": [
          "INSPECTION TRIP, BREAKFAST",
          "INSPECTION TRIP - BREAKFAST"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "INSPECTION TRIP/ BREAKFAST"
      },
      {
        "from": [
          "SUPPER MENU",
          "Supper Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SUPPER MENU"
      },
      {
        "from": [
          "MITTAGESSEN - DINNER",
          "MITTAGESSEN [DINNER]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MITTAGESSEN/DINNER"
      },
      {
        "from": [
          "LUNCH-DINNER",
          "LUNCH;DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH/DINNER"
      },
      {
        "from": [
          "MIDDAG/DINNER",
          "MIDDAG-DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MIDDAG/DINNER"
      },
      {
        "from": [
          "DAILY BILL OF FARE",
          "DAILY BILL OF FARE;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY BILL OF FARE"
      },
      {
        "from": [
          "FOURTH ANNUAL DINNER",
          "Fourth Annual Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOURTH ANNUAL DINNER"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "from": [
          "SOC;",
          "SOC",
          "[SOC?];",
          "SOC(?);",
          "SOC.",
          "[SOC]",
          "SOC?;",
          "(SOC);",
          "(SOC?)",
          "(SOC?);",
          "SOC (?);",
          "SOC(?):",
          "[?SOC];",
          "[SOC;]",
          "[SOC?]",
          "[SOC];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOC"
      },
      {
        "from": [
          "GOVT;",
          "GOVT(?);",
          "GOV'T;",
          "[GOVT?];",
          "GOV'T",
          "GOV'T.",
          "GOVT",
          "GOVT?;",
          "[GOVT?]",
          "[GOVT];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GOVT"
      },
      {
        "from": [
          "COM",
          "COM.",
          "[COM]",
          "(COM?);",
          "COM(?);",
          "COM.;",
          "[COM?];",
          "[COM}"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COM"
      },
      {
        "from": [
          "PROF;",
          "PROF",
          "PROF(?);",
          "PROF.",
          "PROF?;",
          "[PROF?];",
          "[PROF]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PROF"
      },
      {
        "from": [
          "EDUC;",
          "EDUC",
          "EDUC (?);",
          "[EDUC];",
          "(EDUC);",
          "[EDUC?];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EDUC"
      },
      {
        "from": [
          "POL;",
          "POL",
          "[POL]",
          "POL.;",
          "[POL?);",
          "[POL?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "POL"
      },
      {
        "from": [
          "NAV;",
          "NAV; (?)",
          "NAV.",
          "NAV",
          "NAV(?);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NAV"
      },
      {
        "from": [
          "MIL;",
          "MIL",
          "MIL (?);",
          "MIL.",
          "[MIL?];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MIL"
      },
      {
        "from": [
          "OTHER;(PRIVATE);",
          "OTHER,(PRIVATE);",
          "OTHER,PRIVATE",
          "OTHER;PRIVATE;",
          "[OTHER;PRIVATE];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER,PRIVATE"
      },
      {
        "from": [
          "PATR;",
          "PATR",
          "PATR(?);",
          "PATR."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PATR"
      },
      {
        "from": [
          "COMM",
          "COMM.",
          "COMM;",
          "COMM;."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMM"
      },
      {
        "from": [
          "OTHER (PRIVATE PARTY);",
          "OTHER (PRIVATE PARTY)",
          "OTHER (PRIVATE PARTY?)",
          "OTHER (PRIVATE PARTY?);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (PRIVATE PARTY)"
      },
      {
        "from": [
          "RELIG;",
          "RELIG",
          "RELIG?;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RELIG"
      },
      {
        "from": [
          "OTHER (PRIVATE CLUB)",
          "OTHER (PRIVATE CLUB);",
          "OTHER [PRIVATE CLUB?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (PRIVATE CLUB)"
      },
      {
        "from": [
          "GOV;",
          "GOV.",
          "[GOV];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GOV"
      },
      {
        "from": [
          "NAVAL",
          "NAVAL;",
          "[NAVAL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NAVAL"
      },
      {
        "from": [
          "SOCIAL",
          "SOCIAL;",
          "(SOCIAL?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIAL"
      },
      {
        "from": [
          "?",
          "[?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NA"
      },
      {
        "from": [
          "POL; SOC;",
          "SOC; POL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "POL,SOC"
      },
      {
        "from": [
          "OTHER (CLUB);",
          "OTHER (CLUB)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (CLUB)"
      },
      {
        "from": [
          "SOCIAL CLUB",
          "SOCIAL CLUB?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIAL CLUB"
      },
      {
        "from": [
          "OTHER",
          "OTHER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER"
      },
      {
        "from": [
          "OTHER;(PERSONAL);",
          "OTHER(PERSONAL);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (PERSONAL)"
      },
      {
        "from": [
          "FOREIGN",
          "FOREIGN;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOREIGN"
      },
      {
        "from": [
          "OTHER (PRIVATE);",
          "OTHER [PRIVATE];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (PRIVATE)"
      },
      {
        "from": [
          "MILITARY",
          "[MILITARY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MILITARY"
      },
      {
        "from": [
          "PAT;",
          "PAT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PAT"
      },
      {
        "from": [
          "(EDUCATIONAL)",
          "EDUCATIONAL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EDUCATIONAL"
      },
      {
        "from": [
          "PATRIOTIC",
          "PATRIOTIC?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PATRIOTIC"
      },
      {
        "from": [
          "PRIVATE;",
          "(PRIVATE);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRIVATE"
      },
      {
        "from": [
          "PRIVATE PARTY",
          "PRIVATE PARTY;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PRIVATE PARTY"
      }
    ],
    "description": "Mass edit cells in column venue"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "from": [
          "COMPL.",
          "[COMPL?];",
          "COMPL?;",
          "[COMPL];",
          "COMPL (?);",
          "COMPL(?);",
          "COMPL;(?)",
          "[COMPL.]",
          "[COMPL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMPL"
      },
      {
        "from": [
          "OTHER (SOC);",
          "OTHER (SOC?);",
          "OTHER (SOC?)",
          "OTHER (SOC)",
          "OTHER [SOC?];",
          "OTHER (SOC.)",
          "OTHER )SOC);",
          "OTHER [SOC]",
          "OTHER, [SOC?];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (SOC)"
      },
      {
        "from": [
          "ANNIVERSARY;",
          "ANNIVERSARY (?);",
          "ANNIVERSARY(?);",
          "ANNIVERSARY",
          "ANNIVERSARY.",
          "ANNIVERSARY?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNIVERSARY"
      },
      {
        "from": [
          "SECULAR HOLIDAY;",
          "SECULAR HOLIDAY",
          "SECULAR HOLIDAY. HOLIDAY",
          "SECULAR HOLIDAY. HOLIDAY;",
          "SECULAR HOLIDAY HOLIDAY;",
          "SECULAR HOLIDAY HOLIDAY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SECULAR HOLIDAY"
      },
      {
        "from": [
          "OTHER (ANNIVERSARY);",
          "OTHER (ANNIVERSARY)",
          "OTHER (ANNIVERSARY?)",
          "OTHER - ANNIVERSARY",
          "OTHER {ANNIVERSARY};"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (ANNIVERSARY)"
      },
      {
        "from": [
          "[ANNIV?];",
          "(ANNIV);",
          "(ANNIV?);",
          "[?ANNIV?];",
          "[ANNIV?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNIV"
      },
      {
        "from": [
          "SOC;",
          "[SOC?]",
          "(SOC?)",
          "[SOC]",
          "(SOC);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOC"
      },
      {
        "from": [
          "OTHER (MEETING);",
          "OTHER (MEETING)",
          "OTHER (MEETING?);",
          "OTHER (MEETING?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (MEETING)"
      },
      {
        "from": [
          "OTHER (SOCIAL?)",
          "OTHER (SOCIAL);",
          "OTHER (SOCIAL?);",
          "OTHER [SOCIAL];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (SOCIAL)"
      },
      {
        "from": [
          "OTHER (ANNUAL EVENT)",
          "OTHER (ANNUAL EVENT);",
          "OTHER {ANNUAL EVENT};",
          "OTHER, ANNUAL EVENT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (ANNUAL EVENT)"
      },
      {
        "from": [
          "PATRIOTIC HOLIDAY;",
          "PATRIOTIC HOLIDAY",
          "PATRIOTIC HOLIDAY.",
          "PATRIOTIC HOLIDAY. HOLIDAY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PATRIOTIC HOLIDAY"
      },
      {
        "from": [
          "RITE;",
          "RITE",
          "(RITE)",
          "(RITE);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RITE"
      },
      {
        "from": [
          "OTHER (COMMEMORATIVE);",
          "OTHER (COMMEMORATIVE)",
          "OTHER (COMMEMORATIVE?)",
          "OTHER [COMMEMORATIVE]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (COMMEMORATIVE)"
      },
      {
        "from": [
          "DAILY;",
          "DAILY",
          "[DAILY]",
          "DAILY?;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY"
      },
      {
        "from": [
          "?",
          ";",
          "[?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NA"
      },
      {
        "from": [
          "ANNUAL",
          "ANNUAL;",
          "[ANNUAL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNUAL"
      },
      {
        "from": [
          "SECULAR HOLIDAY.HOLIDAY",
          "SECULAR HOLIDAY.HOLIDAY;",
          "SECULAR HOLIDAY;HOLIDAY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SECULAR HOLIDAY;HOLIDAY"
      },
      {
        "from": [
          "DAILY MENU;",
          "DAILY MENU",
          "(DAILY MENU)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY MENU"
      },
      {
        "from": [
          "OTHER (ANNIV)",
          "OTHER (ANNIV);",
          "OTHER (ANNIV?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (ANNIV)"
      },
      {
        "from": [
          "OTHER",
          "OTHER;",
          "OTHER,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER"
      },
      {
        "from": [
          "RELIG. HOLIDAY",
          "RELIG. HOLIDAY;",
          "RELIG HOLIDAY;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RELIG HOLIDAY"
      },
      {
        "from": [
          "(SOCIAL)",
          "(SOCIAL?)",
          "SOCIAL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIAL"
      },
      {
        "from": [
          "ANNUAL DINNER",
          "ANNUAL DINNER;",
          "ANNUAl DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNUAl DINNER"
      },
      {
        "from": [
          "[?REUNION?];",
          "[RE-UNION]",
          "[REUNION]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "REUNION"
      },
      {
        "from": [
          "ANNUAL EVENT",
          "ANNUAL EVENT;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNUAL EVENT"
      },
      {
        "from": [
          "ANIV;",
          "[ANIV?];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANIV"
      },
      {
        "from": [
          "OTHER (REUNION);",
          "(OTHER - REUNION?);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (REUNION)"
      },
      {
        "from": [
          "OTHER (DAILY DATED MENU);",
          "OTHER (DATED DAILY MENU);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (DAILY DATED MENU)"
      },
      {
        "from": [
          "POL;",
          "[POL?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "POL"
      },
      {
        "from": [
          "OTHER (DAILY MENU);",
          "OTHER (DAILY MENU)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (DAILY MENU)"
      },
      {
        "from": [
          "SATURDAY DINNER",
          "SATURDAY DINNER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SATURDAY DINNER"
      },
      {
        "from": [
          "NATIONAL EVENT",
          "NATIONAL EVENT;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NATIONAL EVENT"
      },
      {
        "from": [
          "PAT;",
          "PAT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PAT"
      },
      {
        "from": [
          "OTHER (COMMEMOATIVE)",
          "OTHER (COMMEMOATIVE);"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (COMMEMOATIVE)"
      },
      {
        "from": [
          "DAILY MEAL",
          "DAILY MEAL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY MEAL"
      },
      {
        "from": [
          "DINNER",
          "DINNER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER"
      },
      {
        "from": [
          "SUNDAY DINNER",
          "SUNDAY DINNER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SUNDAY DINNER"
      },
      {
        "from": [
          "ETHNIC HOLIDAY",
          "[ETHNIC HOLIDAY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ETHNIC HOLIDAY"
      },
      {
        "from": [
          "SUNDAY",
          "SUNDAY;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SUNDAY"
      },
      {
        "from": [
          "BREAKFAST",
          "BREAKFAST;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BREAKFAST"
      },
      {
        "from": [
          "OTHER (ANNUAL MEETING);",
          "OTHER {ANNUAL MEETING};"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (ANNUAL MEETING)"
      },
      {
        "from": [
          "BANQUET;",
          "BANQUET"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BANQUET"
      },
      {
        "from": [
          "ETH;",
          "ETH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ETH"
      },
      {
        "from": [
          "ANNIVERSARYERSARY",
          "ANNIVERSARYERSARY;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNIVERSARYERSARY"
      },
      {
        "from": [
          "OTHER (DAILY);",
          "OTHER (DAILY)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (DAILY)"
      },
      {
        "from": [
          "DAILY DINNER",
          "DAILY DINNER;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAILY DINNER"
      },
      {
        "from": [
          "SEMI-ANNUAL",
          "SEMI-ANNUAL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SEMI-ANNUAL"
      }
    ],
    "description": "Mass edit cells in column occasion"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency_symbol",
    "expression": "value",
    "edits": [
      {
        "from": [
          "s",
          "S",
          "S/."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S"
      },
      {
        "from": [
          "f",
          "F"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "F"
      },
      {
        "from": [
          "kr.",
          "Kr."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Kr"
      }
    ],
    "description": "Mass edit cells in column currency_symbol"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "event",
    "keyColumnName": "id",
    "mode": "separator",
    "separator": ",",
    "regex": false,
    "description": "Split multi-valued cells in column event"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "grel:value",
    "edits": [
      {
        "from": [
          " SHORE DINNER",
          "SHORE DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHORE DINNER"
      },
      {
        "from": [
          "Afternoon tea",
          " AFTERNOON TEA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " AFTERNOON TEA"
      },
      {
        "from": [
          " DINNER & SUPPER",
          "supper; dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "supper,dinner"
      },
      {
        "from": [
          "SUPPER",
          " SUPPER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SUPPER"
      },
      {
        "from": [
          " U.S.N.",
          "U.S.N."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.N."
      },
      {
        "from": [
          "DEJEUNER",
          " DEJEUNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DEJEUNER"
      },
      {
        "from": [
          " VISIT OF COLONIAL PRIME MINISTERS TO THE CITY OF LONDON",
          "VISIT OF COLONIAL PRIME MINISTERS TO THE CITY OF LONDON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " VISIT OF COLONIAL PRIME MINISTERS TO THE CITY OF LONDON"
      },
      {
        "from": [
          "BREAKFAST",
          "Breakfast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BREAKFAST"
      },
      {
        "from": [
          "DINER",
          " DINER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER"
      },
      {
        "from": [
          "LUNCH AND DINNER",
          " Lunch and Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH,DINNER"
      },
      {
        "from": [
          "LUNCHEON",
          " LUNCHEON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCHEON"
      },
      {
        "from": [
          "DINNER",
          " DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER"
      },
      {
        "from": [
          "A LA CARTE",
          " A LA CARTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A LA CARTE"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "grel:value",
    "edits": [
      {
        "from": [
          "LUNCH,DINNER",
          "LUNCH/DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUNCH,DINNER"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "event",
    "keyColumnName": "id",
    "mode": "separator",
    "separator": ",",
    "regex": false,
    "description": "Split multi-valued cells in column event"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "grel:value",
    "edits": [
      {
        "from": [
          "SUPPER",
          "supper"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SUPPER"
      },
      {
        "from": [
          "DINNER",
          "dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "venue",
    "keyColumnName": "id",
    "mode": "separator",
    "separator": "(,|;)",
    "regex": true,
    "description": "Split multi-valued cells in column venue"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "from": [
          "CLUB",
          "Club",
          "(CLUB)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLUB"
      },
      {
        "from": [
          "RELIG",
          " RELIG"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RELIG"
      },
      {
        "from": [
          "OTHER (PRIVATE PARTY)",
          "OTHER (PRIVATE PARTY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OTHER (PRIVATE PARTY)"
      },
      {
        "from": [
          "POL",
          " POL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "POL"
      },
      {
        "from": [
          "MIL",
          " MIL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MIL"
      },
      {
        "from": [
          "HOTEL",
          " HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL"
      },
      {
        "from": [
          "PROF",
          " PROF"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PROF"
      },
      {
        "from": [
          "COM",
          " COM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COM"
      }
    ],
    "description": "Mass edit cells in column venue"
  },
  {
    "op": "core/multivalued-cell-split",
    "columnName": "occasion",
    "keyColumnName": "id",
    "mode": "separator",
    "separator": "(,|;)",
    "regex": true,
    "description": "Split multi-valued cells in column occasion"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "from": [
          " HIS CABINET & GUESTS",
          "HIS CABINET & GUESTS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " HIS CABINET & GUESTS"
      },
      {
        "from": [
          "COMPL",
          "(COMPL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMPL"
      },
      {
        "from": [
          " COMP",
          "COMP (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " COMP"
      },
      {
        "from": [
          " FOR MAHARAJA SCINDIYA",
          "FOR MAHARAJA SCINDIYA)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " FOR MAHARAJA SCINDIYA"
      },
      {
        "from": [
          "ANNIV",
          " ANNIV"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNIV"
      },
      {
        "from": [
          "BANQUET",
          "Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BANQUET"
      },
      {
        "from": [
          "ANNUAL BANQUET",
          "Annual Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNUAL BANQUET"
      },
      {
        "from": [
          "ANNUAL MEETING",
          "Annual Meeting"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNUAL MEETING"
      },
      {
        "from": [
          "ANNUAl DINNER",
          "annual dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANNUAl DINNER"
      }
    ],
    "description": "Mass edit cells in column occasion"
  },
  {
    "op": "core/column-removal",
    "columnName": "keywords",
    "description": "Remove column keywords"
  },
  {
    "op": "core/column-removal",
    "columnName": "language",
    "description": "Remove column language"
  },
  {
    "op": "core/column-removal",
    "columnName": "location_type",
    "description": "Remove column location_type"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "from": [
          "RED STAR LINE - ANTWERPEN - NY",
          "RED STAR LINE - ANTWERPEN -NY",
          "RED STAR LINE - ANTWERPEN NY",
          "RED STAR LINE -ANTWERPEN NY",
          "RED STAR LINE - ANTWERPEN  - NY",
          "RED STAR LINE - ANTWERPEN  NY",
          "RED STAR LINE - ANTWERPEN.NY",
          "RED STAR LINE -ANTWERPEN - NY",
          "RED STAR LINE -ANTWERPEN -NY",
          "RED STAR LINE- ANTWERPEN  NY",
          "RED STAR LINE- ANTWERPEN -NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE - ANTWERPEN - NY"
      },
      {
        "from": [
          "NORDDEUTSCHER LLOYD BREMEN",
          "Norddeutscher Lloyd Bremen",
          "NORDDEUTSCHER LLOYD - BREMEN",
          "NORDDEUTSCHER LLOYD  BREMEN",
          "NORDDEUTSCHER LLOYD BREMEN;",
          "NORDDEUTSCHER LLOYD, BREMEN",
          "NORDDEUTSCHER LLOYD -  BREMEN",
          "NORDDEUTSCHER LLOYD -BREMEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDDEUTSCHER LLOYD BREMEN"
      },
      {
        "from": [
          "Waldorf Astoria",
          "Waldorf-Astoria",
          "WALDORF-ASTORIA",
          "(WALDORF-ASTORIA?)",
          "WALDORF ASTORIA",
          "WALDORF- ASTORIA",
          "(WALDORF-ASTORIA)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Astoria"
      },
      {
        "from": [
          "FIFTH AVENUE HOTEL",
          "(FIFTH AVENUE HOTEL)",
          "(FIFTH AVENUE HOTEL?)",
          "FIFTH AVENUE HOTEL (?)",
          "(FIFTH AVENUE HOTEL?}",
          "FIFTH AVENUE HOTEL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FIFTH AVENUE HOTEL"
      },
      {
        "from": [
          "[Restaurant name and/or location not given]",
          "[Restaurant Name And/Or Location Not Given]",
          "Restaurant name and/or location not given]",
          "[Restaurant name and/or location not given] ",
          "Restaurant name and/or location not given",
          "[Restaurant name and/or location not given"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[Restaurant name and/or location not given]"
      },
      {
        "from": [
          "Delmonicos",
          "Delmonico's",
          "DELMONICO'S",
          "DELMONICOS",
          "Delmonicos."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KASUGA",
          "NIPPON YUSEN KAISHA - S.S. KASUGA",
          "NIPPON YUSEN KAISHA -S.S.KASUGA",
          "NIPPON YUSEN KAISHA -SS KASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S.KASUGA"
      },
      {
        "from": [
          "LAUREL-IN-THE-PINES",
          "Laurel In The Pines",
          "LAUREL IN THE PINES",
          "Laurel in the Pines"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LAUREL-IN-THE-PINES"
      },
      {
        "from": [
          "CIE GLE TRANSATLANTIQUE",
          "CIE. GLE. TRANSATLANTIQUE",
          "CIE.GLE. TRANSATLANTIQUE",
          "Cie Gle TRANSATLANTIQUE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CIE GLE TRANSATLANTIQUE"
      },
      {
        "from": [
          "HAMBURG-AMERIKA LINIE",
          "HAMBURG AMERIKA LINIE",
          "HAMBURG - AMERIKA LINIE",
          "HAMBURG- AMERIKA LINIE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HAMBURG-AMERIKA LINIE"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbrauhaus",
          "Hofbräu Haus",
          "Hof Brau Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S. KOBE MARU",
          "NIPPON YUSEN KAISHA - S.S.KOBE MARU",
          "NIPPON YUSEN KAISHA -S.S.KOBE MARU",
          "NIPPPON YUSEN KAISHA - S.S. KOBE MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S. KOBE MARU"
      },
      {
        "from": [
          "Hotel Du Pont",
          "Hotel DuPont",
          "Hotel duPont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Du Pont"
      },
      {
        "from": [
          "RED STAR LINE - S.S.FRIESLAND",
          "RED STAR LINE SS FRIESLAND",
          "RED STAR LINE-SS FRIESLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE - S.S.FRIESLAND"
      },
      {
        "from": [
          "HOTEL BALTIMORE",
          "Hotel  Baltimore",
          "Hotel Baltimore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL BALTIMORE"
      },
      {
        "from": [
          "CAFETERIA LUNCH",
          "CAFETERIA - LUNCH",
          "CAFETERIA-LUNCH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFETERIA LUNCH"
      },
      {
        "from": [
          "SHANLEY'S",
          "Shanley's",
          "SHANLEYS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHANLEY'S"
      },
      {
        "from": [
          "FRIENDLY SONS OF ST. PATRICK",
          "FRIENDLY SONS OF ST PATRICK",
          "FRIENDLY SONS OF ST.PATRICK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRIENDLY SONS OF ST. PATRICK"
      },
      {
        "from": [
          "Schwarzwalders Natur Weinhaus",
          "SCHWARZWALDER'S NATUR WEINHAUS",
          "Schwarzwalder's Natur Weinhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schwarzwalders Natur Weinhaus"
      },
      {
        "from": [
          "TOYO KISEN KAISHA - HONG KONG MARU",
          "TOYO KISEN KAISHA - HONG KONG  MARU",
          "TOYO KISEN KAISHA -HONG KONG MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TOYO KISEN KAISHA - HONG KONG MARU"
      },
      {
        "from": [
          "HOTEL KNICKERBOCKER",
          "Hotel Knickerbocker",
          "HOTEL KNICKERBOCKER (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL KNICKERBOCKER"
      },
      {
        "from": [
          "Sherry's",
          "SHERRY'S",
          "Sherrys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherry's"
      },
      {
        "from": [
          "U.S.M.S. NEW YORK",
          "USMS NEW YORK",
          "U.S.M.S NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. NEW YORK"
      },
      {
        "from": [
          "Union Club",
          "UNION CLUB",
          "(UNION CLUB)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Club"
      },
      {
        "from": [
          "MENZIES HOTEL",
          "MENZIE'S HOTEL",
          "MENZIES'HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MENZIES HOTEL"
      },
      {
        "from": [
          "The Merchant's Club",
          "The Merchants Club",
          "The Merchants' Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchant's Club"
      },
      {
        "from": [
          "ALTA VISTA HOTEL",
          "(ALTA VISTA HOTEL)",
          "ALTA VISTA HOTEL (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALTA VISTA HOTEL"
      },
      {
        "from": [
          "CAFE BOULEVARD",
          "Café Boulevard",
          "Cafe Boulevard"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFE BOULEVARD"
      },
      {
        "from": [
          "RED STAR LINE - S.S.WESTERNLAND",
          "RED STAR LINE - SS WESTERNLAND",
          "RED STAR LINE S.S.WESTERNLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE - S.S.WESTERNLAND"
      },
      {
        "from": [
          "Riggs'",
          "Rigg's",
          "Riggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Riggs'"
      },
      {
        "from": [
          "Compagnie Générale Transatlantique",
          "COMPAGNIE GENERALE TRANSATLANTIQUE",
          "Compagnie Générale Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compagnie Générale Transatlantique"
      },
      {
        "from": [
          "U.S.S. RALEIGH",
          "U.S.S.RALEIGH",
          "U.S.S.S.RALEIGH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. RALEIGH"
      },
      {
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. - S.S. ATHABASCA",
          "CANADIAN PACIFIC RAILWAY CO. - S.S.ATHABASCA",
          "CANADIAN PACIFIC RAILWAY CO.- S.S.ATHABASCA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CANADIAN PACIFIC RAILWAY CO. - S.S. ATHABASCA"
      },
      {
        "from": [
          "NORDEUTSCHER LLOYD BREMEN",
          "NORDEUTSCHER LLOYD, BREMEN",
          "NORDEUTSCHER LLOYD - BREMEN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORDEUTSCHER LLOYD BREMEN"
      },
      {
        "from": [
          "ST. CHARLES HOTEL",
          "St. Charles Hotel",
          "St Charles Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. CHARLES HOTEL"
      },
      {
        "from": [
          "SMITH & MC NELLS",
          "SMITH & MCNELL'S",
          "SMITH & MCNELLS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SMITH & MC NELLS"
      },
      {
        "from": [
          "Paquebot \\Liberté\\\"\"",
          "Paquebot Liberte",
          "Paquebot \\Liberte\\\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot \\Liberté\\\"\""
      },
      {
        "from": [
          "IMPERIAL HOTEL",
          "Imperial Hotel",
          "Impérial Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "IMPERIAL HOTEL"
      },
      {
        "from": [
          "RED STAR LINE",
          "(RED STAR LINE)",
          "RED STAR LINE -"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.NASUGA",
          "NIPPON YUSEN KAISHA - S.S. NASUGA",
          "NIPPON YUSEN KAISHA -S.S.NASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S.NASUGA"
      },
      {
        "from": [
          "U. S. S. New York",
          "U.S.S. New York",
          "U.S.S. New York (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U. S. S. New York"
      },
      {
        "from": [
          "R.M.S. \"Queen Mary\"\"\"",
          "R.M.S. \\Queen  Mary\\\"\"",
          "R.M.S. \\Queen Mary\\\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \"Queen Mary\"\"\""
      },
      {
        "from": [
          "UNION LEAGUE CLUB",
          "Union League Club",
          "(UNION LEAGUE CLUB)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION LEAGUE CLUB"
      },
      {
        "from": [
          "HOTEL ST. REGIS",
          "HOTEL ST.REGIS",
          "Hotel St. Regis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ST. REGIS"
      },
      {
        "from": [
          "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT",
          "EDWARD F. LANG'S LADIES' AND GENT'S LUNCH ROOM AND RESTAURANT;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EDWARD F. LANG'S LADIES AND GENTS LUNCH ROOM AND RESTAURANT"
      },
      {
        "from": [
          "(ENGINEERS CLUB)",
          "ENGINEERS CLUB",
          "ENGINEERS' CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(ENGINEERS CLUB)"
      },
      {
        "from": [
          "FRAUNCES' TAVERN",
          "Fraunces' Tavern",
          "Fraunces Tavern"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRAUNCES' TAVERN"
      },
      {
        "from": [
          "HOTEL DEL CORONADO",
          "Hotel Del Coronado",
          "Hotel del Coronado"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL DEL CORONADO"
      },
      {
        "from": [
          "U.S.M.S.",
          "USMS",
          "U.S.M.S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S."
      },
      {
        "from": [
          "Palace Hotel",
          "PALACE HOTEL",
          "Palace Hôtel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel"
      },
      {
        "from": [
          "AMERICAN MEDICAL EDITORS' ASSOCIATION",
          "AMERICAN MEDICAL EDITOR'S ASSOCIATION",
          "AMERICAN MEDICAL EDITORS ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN MEDICAL EDITORS' ASSOCIATION"
      },
      {
        "from": [
          "HOTEL MARLBOROUGH",
          "Hotel Marlborough",
          "Hotel Marlborough "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MARLBOROUGH"
      },
      {
        "from": [
          "St. Denis Hotel",
          "ST, DENIS HOTEL",
          "ST. DENIS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "Childs",
          "CHILDS'",
          "Child's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Childs"
      },
      {
        "from": [
          "(MANHATTAN CLUB)",
          "Manhattan Club",
          "MANHATTAN CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(MANHATTAN CLUB)"
      },
      {
        "from": [
          "R.M.S. OCEANIC",
          "RMS OCEANIC",
          "R.M.S.OCEANIC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. OCEANIC"
      },
      {
        "from": [
          "MERCHANTS' CLUB",
          "Merchant's Club",
          "Merchants Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MERCHANTS' CLUB"
      },
      {
        "from": [
          "Cosmopolitan Hotel",
          "COSMOPOLITAN HOTEL",
          "Cosmopolitan... Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cosmopolitan Hotel"
      },
      {
        "from": [
          "COLONIAL HOTEL",
          "(?COLONIAL HOTEL?)",
          "(COLONIAL HOTEL)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLONIAL HOTEL"
      },
      {
        "from": [
          "South Ferry Hotel",
          " South Ferry Hotel",
          "SOUTH FERRY HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "South Ferry Hotel"
      },
      {
        "from": [
          "?",
          "L"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "?"
      },
      {
        "from": [
          "SOCIETA LA PIEMONTESE",
          "SOCIETA'LA PIEMONTESE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOCIETA LA PIEMONTESE"
      },
      {
        "from": [
          "Hotel Alexandria",
          "HOTEL ALEXANDRIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Alexandria"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP COMPANY -S.S.ZEALANDER",
          "OCEANIC STEAMSHIP COMPANY - S.S.ZEALANDER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP COMPANY -S.S.ZEALANDER"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP CO. - SONOMA",
          "OCEANIC STEAMSHIP CO. _ SONOMA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP CO. - SONOMA"
      },
      {
        "from": [
          "(ENGLISH HOTEL RESTAURANT)",
          "ENGLISH HOTEL RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(ENGLISH HOTEL RESTAURANT)"
      },
      {
        "from": [
          "MOUQUIN RESTAURANT AND WINE CO",
          "MOUQUIN RESTAURANT AND WINE CO."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MOUQUIN RESTAURANT AND WINE CO"
      },
      {
        "from": [
          "A.H. Meyer Rathskeller",
          "A.H.Meyer Rathskeller"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.H. Meyer Rathskeller"
      },
      {
        "from": [
          "USMS ST LOUIS",
          "U.S.M.S. ST. LOUIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "USMS ST LOUIS"
      },
      {
        "from": [
          "ARLINGTON HOTEL",
          "ARLINGTON hOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ARLINGTON HOTEL"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP CO. - SIERRA",
          "OCEANIC STEAMSHIP CO.- SIERRA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP CO. - SIERRA"
      },
      {
        "from": [
          "THE GOLDEN PHEASANT",
          "The Golden Pheasant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE GOLDEN PHEASANT"
      },
      {
        "from": [
          "Louis Sherry",
          "LOUIS SHERRY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Louis Sherry"
      },
      {
        "from": [
          "HOTEL WASHINGTON",
          "Hotel Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL WASHINGTON"
      },
      {
        "from": [
          "SAVOY HOTEL",
          "Savoy Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SAVOY HOTEL"
      },
      {
        "from": [
          "Elks Club House",
          "Elks' Club House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Elks Club House"
      },
      {
        "from": [
          "Masonic Temple",
          "MASONIC TEMPLE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Masonic Temple"
      },
      {
        "from": [
          "Fred Harvey",
          "FRED HARVEY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fred Harvey"
      },
      {
        "from": [
          "S. S. President Wilson",
          "S.S. President Wilson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S. S. President Wilson"
      },
      {
        "from": [
          "The New Willard Hotel",
          "The New Willard Hotel."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Willard Hotel"
      },
      {
        "from": [
          "Reuben's",
          "Reuben's."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reuben's"
      },
      {
        "from": [
          "(EMPEROR NICHOLAS II",
          "EMPEROR NICHOLAS II"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(EMPEROR NICHOLAS II"
      },
      {
        "from": [
          "Bellevue - Stratford",
          "Bellevue-Stratford"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue - Stratford"
      },
      {
        "from": [
          "United Air Lines",
          "United Airlines"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "United Air Lines"
      },
      {
        "from": [
          "FLAT IRON RESAURANT AND CAFE",
          "FLATIRON RESAURANT AND CAFE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FLAT IRON RESAURANT AND CAFE"
      },
      {
        "from": [
          "(CLUB)",
          "? CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(CLUB)"
      },
      {
        "from": [
          "Hotel Manhattan",
          "HOTEL MANHATTAN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan"
      },
      {
        "from": [
          "ST. GEORGE'S SOCIETY",
          "ST. GEORGES SOCIETY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. GEORGE'S SOCIETY"
      },
      {
        "from": [
          "REPUBLICAN CLUB OF THE CITY OF NEW YORK",
          "Republican Club of the City of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "REPUBLICAN CLUB OF THE CITY OF NEW YORK"
      },
      {
        "from": [
          "NEW YORK YACHT CLUB",
          "New York Yacht Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK YACHT CLUB"
      },
      {
        "from": [
          "NEW ENGLAND SHORTHAND REPORTER'S ASSOCIATION",
          "NEW ENGLAND SHORTHAND REPORTERS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ENGLAND SHORTHAND REPORTER'S ASSOCIATION"
      },
      {
        "from": [
          "JOHN WANAMAKER",
          "John Wanamaker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "JOHN WANAMAKER"
      },
      {
        "from": [
          "Wabash Railway Company",
          "Wabash [Railway Company]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wabash Railway Company"
      },
      {
        "from": [
          "Ye Olde Dutch Tavern",
          "YE OLDE DUTCH TAVERN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ye Olde Dutch Tavern"
      },
      {
        "from": [
          "HOTEL METROPOLE",
          "Hotel Metropole"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL METROPOLE"
      },
      {
        "from": [
          "Plaza Hotel",
          "PLAZA HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plaza Hotel"
      },
      {
        "from": [
          "CAFE SAVARIN",
          "Café Savarin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAFE SAVARIN"
      },
      {
        "from": [
          "Copley Plaza",
          "Copley-Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley Plaza"
      },
      {
        "from": [
          "Bellevue Stratford Hotel",
          "Bellevue-Stratford Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue Stratford Hotel"
      },
      {
        "from": [
          "Unknown",
          "unknown"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Unknown"
      },
      {
        "from": [
          "Bundeshaus Restaurant",
          "Bundeshausrestaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bundeshaus Restaurant"
      },
      {
        "from": [
          "GRAND HOTEL",
          "Grand Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND HOTEL"
      },
      {
        "from": [
          "AMERICAN LEGATION",
          "(AMERICAN LEGATION)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN LEGATION"
      },
      {
        "from": [
          "BRITISH SCHOOLS AND UNIVERSITIES CLUB OF NEW YORK",
          "BRITISHSCHOOLS AND UNIVERSITIES CLUB OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BRITISH SCHOOLS AND UNIVERSITIES CLUB OF NEW YORK"
      },
      {
        "from": [
          "La Canzone Del Mare",
          "La Canzone del Mare"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "La Canzone Del Mare"
      },
      {
        "from": [
          "S.S. AMSTERDAM",
          "S.S.AMSTERDAM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. AMSTERDAM"
      },
      {
        "from": [
          "GRAND HOTEL ROYAL",
          "Grand Hôtel Royal"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND HOTEL ROYAL"
      },
      {
        "from": [
          "El Morocco",
          "el Morocco"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "El Morocco"
      },
      {
        "from": [
          "Pennsylvania Railroad",
          "PENNSYLVANIA RAILROAD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pennsylvania Railroad"
      },
      {
        "from": [
          "CANADIAN PACIFIC RAILWAY CO. - S.S. ALBERTA",
          "CANADIAN PACIFIC RAILWAY CO. - S.S.ALBERTA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CANADIAN PACIFIC RAILWAY CO. - S.S. ALBERTA"
      },
      {
        "from": [
          "NEW YORK CLUB",
          "New York Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK CLUB"
      },
      {
        "from": [
          "HOTEL ST. GEORGE",
          "Hotel St. George"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ST. GEORGE"
      },
      {
        "from": [
          "Paquebot \\France\\\"\"",
          "Paquebot France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot \\France\\\"\""
      },
      {
        "from": [
          "Metropolitan Club",
          "METROPOLITAN CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropolitan Club"
      },
      {
        "from": [
          "The Maplewood",
          "THE MAPLEWOOD"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Maplewood"
      },
      {
        "from": [
          "LACKAWANNA RAILROAD",
          "Lackawanna Railroad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LACKAWANNA RAILROAD"
      },
      {
        "from": [
          "CUNARD LINE-R.M.S. PAVONIA",
          "CUNARD LINE R.M.S. PAVONIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CUNARD LINE-R.M.S. PAVONIA"
      },
      {
        "from": [
          "Maxim's",
          "MAXIM'S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Maxim's"
      },
      {
        "from": [
          "CHILDS' LUNCH ROOMS",
          "CHILD'S LUNCH ROOMS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHILDS' LUNCH ROOMS"
      },
      {
        "from": [
          "RED STAR LINE - S.S. SOUTHWARK",
          "RED STAR LINE - S.S.SOUTHWARK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE - S.S. SOUTHWARK"
      },
      {
        "from": [
          "Astor House",
          "ASTOR HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Astor House"
      },
      {
        "from": [
          "QUEEN'S HOTEL",
          "Queen's Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "QUEEN'S HOTEL"
      },
      {
        "from": [
          "Imperial",
          "IMPERIAL (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial"
      },
      {
        "from": [
          "THE GRIDIRON CLUB",
          "The Gridiron Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE GRIDIRON CLUB"
      },
      {
        "from": [
          "MANSION HOUSE",
          "Mansion House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MANSION HOUSE"
      },
      {
        "from": [
          "Hotel Bristol",
          "HOTEL BRISTOL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Bristol"
      },
      {
        "from": [
          "BANKERS' CLUB OF CHICAGO",
          "BANKERS CLUB OF CHICAGO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BANKERS' CLUB OF CHICAGO"
      },
      {
        "from": [
          "Oustau De Baumaniere",
          "Oustau de Baumaniere"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oustau De Baumaniere"
      },
      {
        "from": [
          "U.S.S. SAN FRANCISCO",
          "U.S.S.SAN FRANCISCO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. SAN FRANCISCO"
      },
      {
        "from": [
          "THE ROUND TABLE",
          "The Roundtable"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE ROUND TABLE"
      },
      {
        "from": [
          "Hotel Somerset",
          "HOTEL SOMERSET"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Somerset"
      },
      {
        "from": [
          "QUEEN CITY CLUB",
          "Queen City Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "QUEEN CITY CLUB"
      },
      {
        "from": [
          "(FIFTH AVE. HOTEL)",
          "FIFTH AVE. HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(FIFTH AVE. HOTEL)"
      },
      {
        "from": [
          "REVERE HOUSE",
          "Revere House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "REVERE HOUSE"
      },
      {
        "from": [
          "ST. GEORGE'S SOCIETY OF NEW YORK",
          "ST.GEORGE'S SOCIETY OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. GEORGE'S SOCIETY OF NEW YORK"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP COMPANY - SONOMA",
          "OCEANIC STEAMSHIP COMPANY _ SONOMA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP COMPANY - SONOMA"
      },
      {
        "from": [
          "NEW YORK STATE HOTEL ASSOCIATION",
          "NEW-YORK STATE HOTEL ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK STATE HOTEL ASSOCIATION"
      },
      {
        "from": [
          "PINE FOREST INN",
          "Pine Forest Inn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PINE FOREST INN"
      },
      {
        "from": [
          "HOTEL ASSOCIATION OF NEW YORK CITY",
          "(HOTEL ASSOCIATION OF NEW YORK CITY)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ASSOCIATION OF NEW YORK CITY"
      },
      {
        "from": [
          "PLANTERS HOTEL",
          "Planters Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PLANTERS HOTEL"
      },
      {
        "from": [
          "University Club",
          "UNIVERSITY CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "University Club"
      },
      {
        "from": [
          "La Crépe",
          "La Crêpe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "La Crépe"
      },
      {
        "from": [
          "Healy's Forty-second Street restaurant",
          "Healy's Forty-second Street Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Healy's Forty-second Street restaurant"
      },
      {
        "from": [
          "(PRIVATE)",
          "PRIVATE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(PRIVATE)"
      },
      {
        "from": [
          "ARION",
          "Arion"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ARION"
      },
      {
        "from": [
          "BUSINESS MEN'S LEAGUE OF ST. LOUIS",
          "BUSINESS MEN'S LEAGUE OF ST.LOUIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BUSINESS MEN'S LEAGUE OF ST. LOUIS"
      },
      {
        "from": [
          "R.M.S. \\Queen Elizabeth\\\"\"",
          "R.M.S. \\Queen  Elizabeth\\\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \\Queen Elizabeth\\\"\""
      },
      {
        "from": [
          "Pig N'whistle",
          "Pig'n Whistle"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pig N'whistle"
      },
      {
        "from": [
          "ST. REGIS HOTEL",
          "ST.REGIS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. REGIS HOTEL"
      },
      {
        "from": [
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES COMMANDERY OF THE STATE OF MINNESOTA",
          "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES.  COMMANDERY OF THE STATE OF MINNESOTA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MILITARY ORDER OF THE LOYAL LEGION OF THE UNITED STATES COMMANDERY OF THE STATE OF MINNESOTA"
      },
      {
        "from": [
          "UNITED STATES HOTEL",
          "United States Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNITED STATES HOTEL"
      },
      {
        "from": [
          "S.S New Amsterdam",
          "S.S. New Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S New Amsterdam"
      },
      {
        "from": [
          "HOTEL CHAMPLAIN",
          "Hotel Champlain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL CHAMPLAIN"
      },
      {
        "from": [
          "Don The Beachcomber",
          "Don the Beachcomber"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Don The Beachcomber"
      },
      {
        "from": [
          "RED STAR LINE - ANTWERPEN -NEW YORK",
          "RED STAR LINE ANTWERPEN-NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RED STAR LINE - ANTWERPEN -NEW YORK"
      },
      {
        "from": [
          "Rigg's Twentieth Street Restaurant",
          "Riggs' Twentieth Street Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rigg's Twentieth Street Restaurant"
      },
      {
        "from": [
          "U. S. S. Wyoming",
          "U.S.S. Wyoming"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U. S. S. Wyoming"
      },
      {
        "from": [
          "PENN. RR - PULLMAN DINING CAR SERVICE",
          "PENN RR - PULLMAN DINING CAR SERVICE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PENN. RR - PULLMAN DINING CAR SERVICE"
      },
      {
        "from": [
          "Guffanti's Table d'Hôte",
          "Guffanti's Table d'Hôte "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Guffanti's Table d'Hôte"
      },
      {
        "from": [
          "\\The Manor\\\"\"",
          "The Manor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\\The Manor\\\"\""
      },
      {
        "from": [
          "(HARVARD UNIVERSITY)",
          "HARVARD UNIVERSITY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(HARVARD UNIVERSITY)"
      },
      {
        "from": [
          "Union Pacific  Railroad",
          "Union Pacific Railroad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Pacific  Railroad"
      },
      {
        "from": [
          "Hotel Ritz",
          "HOTEL RITZ"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Ritz"
      },
      {
        "from": [
          "(MAHARAJA OF BARODA)",
          "MAHARAJA OF BARODA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(MAHARAJA OF BARODA)"
      },
      {
        "from": [
          "AMERICAN BANKERS ASSOCIATION",
          "AMERICAN BANKERS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN BANKERS ASSOCIATION"
      },
      {
        "from": [
          "THE SOUTHERN BERKSHIRE SOCIETY OF NEW YORK",
          "SOUTHERN BERKSHIRE SOCIETY OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE SOUTHERN BERKSHIRE SOCIETY OF NEW YORK"
      },
      {
        "from": [
          "Sphinx Club",
          "SPHINX CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sphinx Club"
      },
      {
        "from": [
          "CHAMBER OF COMMERCE",
          "Chamber of Commerce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHAMBER OF COMMERCE"
      },
      {
        "from": [
          "NEW YORK PRESS CLUB",
          "New York Press Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK PRESS CLUB"
      },
      {
        "from": [
          "(238 EIGHT AVENUE)",
          "238 EIGHT AVENUE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(238 EIGHT AVENUE)"
      },
      {
        "from": [
          "HOLLAND HOUSE",
          "Holland House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOLLAND HOUSE"
      },
      {
        "from": [
          "Wärdshuset Stallmästaregarden",
          "Wärdshuset Stallmästaregården"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wärdshuset Stallmästaregarden"
      },
      {
        "from": [
          "Hotel Europäischer Hof",
          "HOTEL EUROPAISCHER HOF"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Europäischer Hof"
      },
      {
        "from": [
          "R.M.S. Parthia",
          "R.M.S. \"Parthia\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Parthia"
      },
      {
        "from": [
          "Grocers Hall",
          "Grocers' Hall"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grocers Hall"
      },
      {
        "from": [
          "ROGER'S RESTAURANT",
          "ROGERS'RESTAURANT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROGER'S RESTAURANT"
      },
      {
        "from": [
          "Aldine Club",
          "ALDINE CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aldine Club"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP COMPANY - SIERRA",
          "OCEANIC STEAMSHIP COMPANY -SIERRA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP COMPANY - SIERRA"
      },
      {
        "from": [
          "YALE UNIVERSITY",
          "Yale University"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "YALE UNIVERSITY"
      },
      {
        "from": [
          "THE ANNEX",
          "The Annex"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE ANNEX"
      },
      {
        "from": [
          "The Mouquin Restaurant and Wine Co.",
          "The Mouquin Restaurant And Wine Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Mouquin Restaurant and Wine Co."
      },
      {
        "from": [
          "RECTOR'S",
          "Rector's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RECTOR'S"
      },
      {
        "from": [
          "WILLARD'S HOTEL",
          "WILLARDS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WILLARD'S HOTEL"
      },
      {
        "from": [
          "The Oriental",
          "THE ORIENTAL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Oriental"
      },
      {
        "from": [
          "SMITHVILLE INN",
          "Smithville Inn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SMITHVILLE INN"
      },
      {
        "from": [
          "Rathskeller",
          "RATHSKELLER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rathskeller"
      },
      {
        "from": [
          "Cafe de Paris",
          "Café de Paris"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe de Paris"
      },
      {
        "from": [
          "KING FREDERIK VIII",
          "(KING FREDERIK VIII)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING FREDERIK VIII"
      },
      {
        "from": [
          "O.D.",
          "O. D."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "O.D."
      },
      {
        "from": [
          "B&O BLUE LINE",
          "B.& O. BLUE LINE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "B&O BLUE LINE"
      },
      {
        "from": [
          "OCEANIC STEAMSHIP CO. - S.S.ZEALANDIA",
          "OCEANIC STEAMSHIP CO. S.S.ZEALANDIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEANIC STEAMSHIP CO. - S.S.ZEALANDIA"
      },
      {
        "from": [
          "BROADWAY CENTRAL HOTEL",
          "Broadway Central Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADWAY CENTRAL HOTEL"
      },
      {
        "from": [
          "R.G.(?)",
          "RG"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.G.(?)"
      },
      {
        "from": [
          "Red Coach Grill",
          "RED COACH GRILL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Coach Grill"
      },
      {
        "from": [
          "QUILL CLUB",
          "Quill Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "QUILL CLUB"
      },
      {
        "from": [
          "ST. ANDREW'S SOCIETY OF THE STATE OF NEW YORK",
          "ST.ANDREWS SOCIETY OF THE STATE OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. ANDREW'S SOCIETY OF THE STATE OF NEW YORK"
      },
      {
        "from": [
          "Lüchow's Restaurant",
          "Luchow's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lüchow's Restaurant"
      },
      {
        "from": [
          "The Essex Hotel   The Colonnades",
          "The Essex Hotel The Colonnades"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Essex Hotel   The Colonnades"
      },
      {
        "from": [
          "NIPPON YUSEN KAISHA - S.S.KINSHIN MARU",
          "NIPPON YUSEN KAISHA -S.S.KINSHIN MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIPPON YUSEN KAISHA - S.S.KINSHIN MARU"
      },
      {
        "from": [
          "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK",
          "THE NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ENGLAND SOCIETY IN THE CITY OF NEW YORK"
      },
      {
        "from": [
          "HOTEL LINCOLN",
          "Hotel Lincoln"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL LINCOLN"
      },
      {
        "from": [
          "The Hotel Astor   The Belvedere Room",
          "The Hotel Astor  The Belvedere Room"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Hotel Astor   The Belvedere Room"
      },
      {
        "from": [
          "Hotel La Salle",
          "Hotel LaSalle"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel La Salle"
      },
      {
        "from": [
          "Le Dome Of The Four Seasons",
          "Le Dôme Of The Four Seasons"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Dome Of The Four Seasons"
      },
      {
        "from": [
          "St. Francis Hotel",
          "ST.FRANCIS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Francis Hotel"
      },
      {
        "from": [
          "CHATEAU FRONTENAC",
          "Chateau Frontenac"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHATEAU FRONTENAC"
      },
      {
        "from": [
          "SANTA FE ROUTE",
          "SANTA FE' ROUTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SANTA FE ROUTE"
      },
      {
        "from": [
          "MERCHANT'S CLUB OF BOSTON",
          "MERCHANTS' CLUB OF BOSTON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MERCHANT'S CLUB OF BOSTON"
      },
      {
        "from": [
          "Adams' Restaurant",
          "Adam's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adams' Restaurant"
      },
      {
        "from": [
          "ANCIENT AND HONORABLE ARTILLERY CO OF MASSACHUSETTS",
          "ANCIENT AND HONORABLE ARTILLERY CO. OF MASSACHUSETTS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANCIENT AND HONORABLE ARTILLERY CO OF MASSACHUSETTS"
      },
      {
        "from": [
          "The Waldorf Astoria",
          "The Waldorf-Astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf Astoria"
      },
      {
        "from": [
          "Hotel Imperial",
          "HOTEL IMPERIAL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Imperial"
      },
      {
        "from": [
          "New York Central System",
          "[New York Central System]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central System"
      },
      {
        "from": [
          "HARVARD CLUB OF NEW YORK CITY",
          "Harvard Club Of New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HARVARD CLUB OF NEW YORK CITY"
      },
      {
        "from": [
          "Hotel McAlpin",
          "Hotel Mc Alpin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel McAlpin"
      },
      {
        "from": [
          "Meyer's Hotel",
          "MEYERS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Meyer's Hotel"
      },
      {
        "from": [
          "Walton's Old Homestead Oyster and Chop House",
          "WALTON'S OLD HOMESTEAD OYSTER AND CHOP HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Walton's Old Homestead Oyster and Chop House"
      },
      {
        "from": [
          "BUFFALO CLUB",
          "Buffalo Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BUFFALO CLUB"
      },
      {
        "from": [
          "SIEGEL COOPER CO.",
          "SIEGEL-COOPER CO."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SIEGEL COOPER CO."
      },
      {
        "from": [
          "Copley-Plaza Hotel",
          "Copley Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley-Plaza Hotel"
      },
      {
        "from": [
          "COTILLION CLUB",
          "Cotillion Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COTILLION CLUB"
      },
      {
        "from": [
          "THE PORTLAND",
          "The Portland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE PORTLAND"
      },
      {
        "from": [
          "KING HAAKON VII",
          "(KING HAAKON VII)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING HAAKON VII"
      },
      {
        "from": [
          "Mercantile Lunch Co.",
          "Mercantile lunch Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mercantile Lunch Co."
      },
      {
        "from": [
          "CRAWFORD HOUSE",
          "Crawford House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CRAWFORD HOUSE"
      },
      {
        "from": [
          "MACY'S",
          "Macy's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MACY'S"
      },
      {
        "from": [
          "HOTEL CLAREMONT",
          "Hotel Claremont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL CLAREMONT"
      },
      {
        "from": [
          "MAPLEWOOD HOTEL",
          "Maplewood Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MAPLEWOOD HOTEL"
      },
      {
        "from": [
          "Brooklyn Club",
          "BROOKLYN CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brooklyn Club"
      },
      {
        "from": [
          "HOTEL JEFFERSON",
          "Hotel Jefferson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL JEFFERSON"
      },
      {
        "from": [
          "MARIE ANTOINETTE HOTEL",
          "Marie Antoinette Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MARIE ANTOINETTE HOTEL"
      },
      {
        "from": [
          "PALACE HOTEL RESTAURANT",
          "Palace Hotel Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PALACE HOTEL RESTAURANT"
      },
      {
        "from": [
          "Le Café Chambord",
          "Le Cafe Chambord"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Café Chambord"
      },
      {
        "from": [
          "Simpson's In The Strand",
          "Simpson's-in-the-Strand"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Simpson's In The Strand"
      },
      {
        "from": [
          "TYN-Y-COED",
          "TYNY COED"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TYN-Y-COED"
      },
      {
        "from": [
          "BRISTOL HOTEL",
          "Bristol Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BRISTOL HOTEL"
      },
      {
        "from": [
          "Auditorium Hotel",
          "AUDITORIUM HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium Hotel"
      },
      {
        "from": [
          "GRAND HOTEL HUNGARIA",
          "Grand Hotel Hungaria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND HOTEL HUNGARIA"
      },
      {
        "from": [
          "U. S. S. Florida",
          "U.S.S. Florida"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U. S. S. Florida"
      },
      {
        "from": [
          "THE WINDSOR",
          "The Windsor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE WINDSOR"
      },
      {
        "from": [
          "R.M.S. \\Mauretania\\\"\"",
          "R.M.S. Mauretania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \\Mauretania\\\"\""
      },
      {
        "from": [
          "(KING ALEXANDER OF SERVIA)",
          "KING ALEXANDER OF SERVIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(KING ALEXANDER OF SERVIA)"
      },
      {
        "from": [
          "[Restaurant And/Or Location Not Given.]",
          "[Restaurant And/Or Location Not Given]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[Restaurant And/Or Location Not Given.]"
      },
      {
        "from": [
          "HOTEL DU MUSEE",
          "HOTEL DU MUSEE'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL DU MUSEE"
      },
      {
        "from": [
          "S.S. America",
          "S.S.America"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. America"
      },
      {
        "from": [
          "BOHEMIAN CLUB",
          "Bohemian Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOHEMIAN CLUB"
      },
      {
        "from": [
          "METROPOLITAN LIFE INSURANCE COMPANY",
          "Metropolitan Life Insurance Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "METROPOLITAN LIFE INSURANCE COMPANY"
      },
      {
        "from": [
          "HOTEL SCHENLEY",
          "Hotel Schenley"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SCHENLEY"
      },
      {
        "from": [
          "FLAT IRON RESTAURANT & CAFE",
          "FLATIRON RESTAURANT & CAFE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FLAT IRON RESTAURANT & CAFE"
      },
      {
        "from": [
          "R.H. MACY & CO.",
          "R.H. Macy & Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.H. MACY & CO."
      },
      {
        "from": [
          "CRESCENT ATHLETIC CLUB",
          "Crescent Athletic Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CRESCENT ATHLETIC CLUB"
      },
      {
        "from": [
          "Herald Square Hotel",
          "HERALD SQUARE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Herald Square Hotel"
      },
      {
        "from": [
          "The Lotos Club",
          "THE LOTOS CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Lotos Club"
      },
      {
        "from": [
          "JEFFERSON HOTEL",
          "Jefferson Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "JEFFERSON HOTEL"
      },
      {
        "from": [
          "UNION SQUARE HOTEL",
          "Union Square Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION SQUARE HOTEL"
      },
      {
        "from": [
          "Café Lafayette",
          "CAFE LAFAYETTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café Lafayette"
      },
      {
        "from": [
          "U.S.M.S.PHILADELPHIA",
          "USMS PHILADELPHIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S.PHILADELPHIA"
      },
      {
        "from": [
          "Dinner Menu, S. S. Vaderland, March 18th, 1910.",
          "Dinner Menu, S.S. Vaderland, March 18th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "from": [
          "Hotel Majestic",
          "HOTEL MAJESTIC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Majestic"
      },
      {
        "from": [
          "Pirate's House",
          "Pirates' House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pirate's House"
      },
      {
        "from": [
          "Ritz Carlton Hotel",
          "Ritz-Carlton Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ritz Carlton Hotel"
      },
      {
        "from": [
          "DENNETT'S",
          "Dennett's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DENNETT'S"
      },
      {
        "from": [
          "WISCONSIN SOCIETY - SONS OF THE AMERICAN REVOLUTION",
          "WISCONSIN SOCIETY SONS OF THE AMERICAN REVOLUTION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WISCONSIN SOCIETY - SONS OF THE AMERICAN REVOLUTION"
      },
      {
        "from": [
          "Hotel Del Monte",
          "HOTEL DEL MONTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Del Monte"
      },
      {
        "from": [
          "MASTER PRINTERS ASSOCIATION",
          "MASTER PRINTERS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MASTER PRINTERS ASSOCIATION"
      },
      {
        "from": [
          "PONTCHARTRAIN HOTEL",
          "Pontchartrain Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PONTCHARTRAIN HOTEL"
      },
      {
        "from": [
          "GRAND HOTEL CENTRAL",
          "Grand Hotel Central"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND HOTEL CENTRAL"
      },
      {
        "from": [
          "S.S. Minnetonka",
          "S.S. \"Minnetonka\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Minnetonka"
      },
      {
        "from": [
          "Congress Hotel",
          "CONGRESS HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Congress Hotel"
      },
      {
        "from": [
          "LOTOS CLUB",
          "Lotos Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LOTOS CLUB"
      },
      {
        "from": [
          "PROFILE HOUSE  AND HOTEL VENDOME",
          "PROFILE HOUSE AND HOTEL VENDOME"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PROFILE HOUSE  AND HOTEL VENDOME"
      },
      {
        "from": [
          "NORTHERN PACIFIC RAILWAY",
          "Northern Pacific Railway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORTHERN PACIFIC RAILWAY"
      },
      {
        "from": [
          "HOTEL COLORADO",
          "Hotel Colorado"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL COLORADO"
      },
      {
        "from": [
          "The Cobble Stones",
          "The Cobblestones"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cobble Stones"
      },
      {
        "from": [
          "S.S. \"Frederik VIII\"",
          "S.S. Frederik VIII"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. \"Frederik VIII\""
      },
      {
        "from": [
          "(KING CHRISTIAN IX OF DENMARK)",
          "KING CHRISTIAN IX OF DENMARK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(KING CHRISTIAN IX OF DENMARK)"
      },
      {
        "from": [
          "MURRAY HILL HOTEL",
          "Murray Hill Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MURRAY HILL HOTEL"
      },
      {
        "from": [
          "SHERMAN SQUARE HOTEL",
          "Sherman Square Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHERMAN SQUARE HOTEL"
      },
      {
        "from": [
          "Plaza",
          "PLAZA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plaza"
      },
      {
        "from": [
          "NATIONAL WHOLESALE  DRUGGISTS' ASSOCIATION",
          "NATIONAL WHOLESALE DRUGGISTS' ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NATIONAL WHOLESALE  DRUGGISTS' ASSOCIATION"
      },
      {
        "from": [
          "[Not Given]",
          "[Not given]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[Not Given]"
      },
      {
        "from": [
          "HOTEL CHAMBERLIN",
          "Hotel Chamberlin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL CHAMBERLIN"
      },
      {
        "from": [
          "S.S. United States",
          "S. S. United States"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. United States"
      },
      {
        "from": [
          "HOTEL SAVOY",
          "Hotel Savoy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SAVOY"
      },
      {
        "from": [
          "CASINO CENTRAL PARK",
          "Casino   Central Park"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CASINO CENTRAL PARK"
      },
      {
        "from": [
          "KING EDWARD VII",
          "(KING EDWARD VII)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KING EDWARD VII"
      },
      {
        "from": [
          "(AMERICAN LINE)",
          "American Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(AMERICAN LINE)"
      },
      {
        "from": [
          "HOLLAND-AMERICA LINE",
          "Holland-America Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOLLAND-AMERICA LINE"
      },
      {
        "from": [
          "HOTEL MARIE ANTOINETTE",
          "Hotel Marie Antoinette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MARIE ANTOINETTE"
      },
      {
        "from": [
          "The Washington",
          "THE WASHINGTON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Washington"
      },
      {
        "from": [
          "(KING UMBERTO)",
          "KING UMBERTO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(KING UMBERTO)"
      },
      {
        "from": [
          "THE LINCOLN CLUB",
          "The Lincoln Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE LINCOLN CLUB"
      },
      {
        "from": [
          "HOTEL WESTMINSTER",
          "Hotel Westminster"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL WESTMINSTER"
      },
      {
        "from": [
          "Ritz Carlton",
          "Ritz-Carlton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ritz Carlton"
      },
      {
        "from": [
          "ST.LOUIS CLUB",
          "ST. LOUIS CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST.LOUIS CLUB"
      },
      {
        "from": [
          "THE ALDINE CLUB",
          "The Aldine Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE ALDINE CLUB"
      },
      {
        "from": [
          "HOTEL LAFAYETTE",
          "Hotel Lafayette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL LAFAYETTE"
      },
      {
        "from": [
          "Met-Life Building",
          "MetLife Building"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Met-Life Building"
      },
      {
        "from": [
          "FLAT IRON RESTAURANT",
          "Flatiron Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FLAT IRON RESTAURANT"
      },
      {
        "from": [
          "Muhlenkamper Fahrhaus",
          "Mühlenkamper Fährhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Muhlenkamper Fahrhaus"
      },
      {
        "from": [
          "(DOWN TOWN CLUB)",
          "DOWNTOWN CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(DOWN TOWN CLUB)"
      },
      {
        "from": [
          "Great Northern Railway",
          "GREAT NORTHERN RAILWAY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Great Northern Railway"
      },
      {
        "from": [
          "WALDORF-ASTORIA HOTEL",
          "Waldorf-Astoria Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF-ASTORIA HOTEL"
      },
      {
        "from": [
          "New York Athletic Club",
          "NEW YORK ATHLETIC CLUB"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Athletic Club"
      },
      {
        "from": [
          "THE MERCHANT'S CLUB OF CHICAGO",
          "THE MERCHANTS CLUB OF CHICAGO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE MERCHANT'S CLUB OF CHICAGO"
      },
      {
        "from": [
          "NEW YORK CENTRAL & HUDSON RIVER R.R.",
          "NEW YORK CENTRAL & HUDSON RIVER R.R.."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK CENTRAL & HUDSON RIVER R.R."
      },
      {
        "from": [
          "(MAJESTIC HOTEL)",
          "MAJESTIC HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(MAJESTIC HOTEL)"
      },
      {
        "from": [
          "CENTURY CLUB",
          "(CENTURY CLUB?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CENTURY CLUB"
      },
      {
        "from": [
          "PARK AVENUE HOTEL",
          "Park Avenue Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARK AVENUE HOTEL"
      },
      {
        "from": [
          "WINDSOR HOTEL",
          "Windsor Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINDSOR HOTEL"
      },
      {
        "from": [
          "CUNARD STEAM SHIP COMPANY LIMITED",
          "CUNARD STEAMSHIP COMPANY LIMITED"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CUNARD STEAM SHIP COMPANY LIMITED"
      },
      {
        "from": [
          "SMITH & MC NELL",
          "SMITH & McNELL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SMITH & MC NELL"
      },
      {
        "from": [
          "CHICAGO STATIONERS ASSOCIATION",
          "CHICAGOS STATIONERS ASSOCIATION"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHICAGO STATIONERS ASSOCIATION"
      },
      {
        "from": [
          "ELLICOTT CLUB",
          "Ellicott Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ELLICOTT CLUB"
      },
      {
        "from": [
          "S.S. American Shipper",
          "S.S. \"American Shipper\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. American Shipper"
      },
      {
        "from": [
          "Parker House",
          "PARKER HOUSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House"
      },
      {
        "from": [
          "S.S. \"Ile De France\"\"\"",
          "S.S. Ile De France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. \"Ile De France\"\"\""
      },
      {
        "from": [
          "Hotel St. Andrew",
          "HOTEL ST. ANDREW"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. Andrew"
      },
      {
        "from": [
          "CARLTON CLUB",
          "Carlton Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CARLTON CLUB"
      },
      {
        "from": [
          "NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE.",
          "(NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE.)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NORTHERN STEAMSHIP COMPANY/GREAT NORTHERN RY LINE."
      },
      {
        "from": [
          "BROWN PALACE HOTEL",
          "Brown Palace Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROWN PALACE HOTEL"
      },
      {
        "from": [
          "CORTELYOU CLUB",
          "Cortelyou Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CORTELYOU CLUB"
      },
      {
        "from": [
          "PROVINZIAL LIEDERTAFEL",
          "PROVINZIAL-LIEDERTAFEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PROVINZIAL LIEDERTAFEL"
      },
      {
        "from": [
          "RESTAURANT WALTERSPIEL",
          "Restaurant Walterspiel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RESTAURANT WALTERSPIEL"
      },
      {
        "from": [
          "Harvard Club",
          "(HARVARD CLUB)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Harvard Club"
      },
      {
        "from": [
          "Gramercy Park Hotel",
          "Gramercy Park hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gramercy Park Hotel"
      },
      {
        "from": [
          "Eastern Hotel",
          "EASTERN HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eastern Hotel"
      },
      {
        "from": [
          "HOTEL DENNIS",
          "Hotel Dennis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL DENNIS"
      },
      {
        "from": [
          "Park Lane",
          "Park lane"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Lane"
      },
      {
        "from": [
          "The Plaza",
          "THE PLAZA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Plaza"
      },
      {
        "from": [
          "A.W. DENNETT",
          "A.W.DENNETT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.W. DENNETT"
      },
      {
        "from": [
          "Café des Beaux Arts",
          "Café des Beaux-Arts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café des Beaux Arts"
      },
      {
        "from": [
          "US ARMY - SUBSISTENCE DEPT.",
          "U.S. ARMY - SUBSISTENCE DEPT."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "US ARMY - SUBSISTENCE DEPT."
      },
      {
        "from": [
          "ANCIENT ACCEPTED SCOTTISH RITE",
          "ANCIENT & ACCEPTED SCOTTISH RITE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ANCIENT ACCEPTED SCOTTISH RITE"
      },
      {
        "from": [
          "TOURO CLUB",
          "Touro Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TOURO CLUB"
      },
      {
        "from": [
          "Hotel Copley Plaza",
          "Hotel Copley-Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Copley Plaza"
      },
      {
        "from": [
          "COMMERCIAL CLUB",
          "Commercial Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMMERCIAL CLUB"
      }
    ],
    "description": "Mass edit cells in column sponsor"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "from": [
          " U.S.V.",
          "\" U.S.V."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": " U.S.V."
      },
      {
        "from": [
          "DINNER A LA CARTE",
          "DINNER-A LA CARTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER A LA CARTE"
      },
      {
        "from": [
          "WEDDING DINNER",
          "(WEDDING)DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WEDDING DINNER"
      },
      {
        "from": [
          "BREAKFAST - SECOND CABIN",
          "BREAKFAST-SECOND CABIN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BREAKFAST - SECOND CABIN"
      },
      {
        "from": [
          "DINNER",
          "DINNNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER"
      },
      {
        "from": [
          "DEJEUNER FOURCHETTE/LUNCHEON",
          "DEJEUNER FOURCHETTE/ LUNCHEON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DEJEUNER FOURCHETTE/LUNCHEON"
      },
      {
        "from": [
          "(DINNER DANCE)",
          "DINNER-DANCE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(DINNER DANCE)"
      },
      {
        "from": [
          "FOURTH OF JULY DINNER",
          "FOURTH OFJULY DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FOURTH OF JULY DINNER"
      },
      {
        "from": [
          "DINNER/DINER",
          "DINER/DINNER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINNER/DINER"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value",
    "edits": [
      {
        "from": [
          "[Restaurant name and/or location not given]",
          "[Restaurant Name And/Or Location Not Given]",
          "Restaurant name and/or location not given]",
          "Restaurant name and/or location not given",
          "[Restaurant name and/or location not given"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[Restaurant name and/or location not given]"
      },
      {
        "from": [
          "Fifth Avenue Hotel",
          "Fifth Avenue Hotel (?)",
          "Fifth Avenue Hotel?",
          "(Fifth Avenue Hotel?}"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Avenue Hotel"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbrauhaus",
          "Hofbräu Haus",
          "Hof Brau Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyd, Bremen",
          "Norddeutscher Lloyd Bremen;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Hotel Du Pont",
          "Hotel DuPont",
          "Hotel duPont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Du Pont"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Kasuga",
          "Nippon Yusen Kaisha S.S. Kasuga",
          "Nippon Yusen Kaisha Ss Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S.Kasuga"
      },
      {
        "from": [
          "Cie Gle Transatlantique",
          "Cie. Gle. Transatlantique",
          "Cie.Gle. Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cie Gle Transatlantique"
      },
      {
        "from": [
          "Friendly Sons Of St. Patrick",
          "Friendly Sons Of St Patrick",
          "Friendly Sons Of St.Patrick"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Friendly Sons Of St. Patrick"
      },
      {
        "from": [
          "U.S.M.S. New York",
          "Usms New York",
          "U.S.M.S New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. New York"
      },
      {
        "from": [
          "Menzie's Hotel",
          "Menzies Hotel",
          "Menzies'hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Menzie's Hotel"
      },
      {
        "from": [
          "Delmonicos",
          "Delmonico's",
          "Delmonicos."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos"
      },
      {
        "from": [
          "The Merchant's Club",
          "The Merchants Club",
          "The Merchants' Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchant's Club"
      },
      {
        "from": [
          "Riggs'",
          "Rigg's",
          "Riggs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Riggs'"
      },
      {
        "from": [
          "U.S.S. Raleigh",
          "U.S.S.Raleigh",
          "U.S.S.S.Raleigh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. Raleigh"
      },
      {
        "from": [
          "Smith & Mcnell's",
          "Smith & Mcnells",
          "Smith & Mc Nells"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smith & Mcnell's"
      },
      {
        "from": [
          "U. S. S. New York",
          "U.S.S. New York",
          "U.S.S. New York (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U. S. S. New York"
      },
      {
        "from": [
          "Waldorf Astoria",
          "Waldorf-Astoria",
          "Waldorf Astoria?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Astoria"
      },
      {
        "from": [
          "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant",
          "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant",
          "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant"
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Kobe Maru",
          "Nippon Yusen Kaisha S.S. Kobe Maru",
          "Nipppon Yusen Kaisha S.S. Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S.Kobe Maru"
      },
      {
        "from": [
          "U.S.M.S.",
          "Usms",
          "U.S.M.S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S."
      },
      {
        "from": [
          "American Medical Editor's Association",
          "American Medical Editors' Association",
          "American Medical Editors Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Medical Editor's Association"
      },
      {
        "from": [
          "Childs",
          "Childs'",
          "Child's"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Childs"
      },
      {
        "from": [
          "R.M.S. Oceanic",
          "Rms Oceanic",
          "R.M.S.Oceanic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Oceanic"
      },
      {
        "from": [
          "Merchant's Club",
          "Merchants' Club",
          "Merchants Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Merchant's Club"
      },
      {
        "from": [
          "?",
          "L"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "?"
      },
      {
        "from": [
          "Societa La Piemontese",
          "Societa'la Piemontese"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Societa La Piemontese"
      },
      {
        "from": [
          "Mouquin Restaurant And Wine Co",
          "Mouquin Restaurant And Wine Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mouquin Restaurant And Wine Co"
      },
      {
        "from": [
          "A.H. Meyer Rathskeller",
          "A.H.Meyer Rathskeller"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.H. Meyer Rathskeller"
      },
      {
        "from": [
          "Usms St Louis",
          "U.S.M.S. St. Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Usms St Louis"
      },
      {
        "from": [
          "Laurel In The Pines",
          "Laurel in the Pines"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Laurel In The Pines"
      },
      {
        "from": [
          "Red Star Line S.S.Friesland",
          "Red Star Line Ss Friesland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line S.S.Friesland"
      },
      {
        "from": [
          "Elks Club House",
          "Elks' Club House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Elks Club House"
      },
      {
        "from": [
          "S. S. President Wilson",
          "S.S. President Wilson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S. S. President Wilson"
      },
      {
        "from": [
          "The New Willard Hotel",
          "The New Willard Hotel."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Willard Hotel"
      },
      {
        "from": [
          "United States Government",
          "United States Government?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "United States Government"
      },
      {
        "from": [
          "Reuben's",
          "Reuben's."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reuben's"
      },
      {
        "from": [
          "Bellevue - Stratford",
          "Bellevue-Stratford"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue - Stratford"
      },
      {
        "from": [
          "United Air Lines",
          "United Airlines"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "United Air Lines"
      },
      {
        "from": [
          "Flat Iron Resaurant And Cafe",
          "Flatiron Resaurant And Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Resaurant And Cafe"
      },
      {
        "from": [
          "? Club",
          "Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "? Club"
      },
      {
        "from": [
          "St. George's Society",
          "St. Georges Society"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George's Society"
      },
      {
        "from": [
          "Republican Club Of The City Of New York",
          "Republican Club of the City of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Republican Club Of The City Of New York"
      },
      {
        "from": [
          "New England Shorthand Reporters' Association",
          "New England Shorthand Reporter's Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Shorthand Reporters' Association"
      },
      {
        "from": [
          "Wabash Railway Company",
          "Wabash [Railway Company]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wabash Railway Company"
      },
      {
        "from": [
          "Cafe Savarin",
          "Café Savarin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Savarin"
      },
      {
        "from": [
          "Copley Plaza",
          "Copley-Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley Plaza"
      },
      {
        "from": [
          "Shanley's",
          "Shanleys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shanley's"
      },
      {
        "from": [
          "Bellevue Stratford Hotel",
          "Bellevue-Stratford Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue Stratford Hotel"
      },
      {
        "from": [
          "Bundeshaus Restaurant",
          "Bundeshausrestaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bundeshaus Restaurant"
      },
      {
        "from": [
          "S.S. Amsterdam",
          "S.S.Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Amsterdam"
      },
      {
        "from": [
          "Canadian Pacific Railway Co. S.S. Alberta",
          "Canadian Pacific Railway Co. S.S.Alberta"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadian Pacific Railway Co. S.S. Alberta"
      },
      {
        "from": [
          "Schwarzwalder's Natur Weinhaus",
          "Schwarzwalders Natur Weinhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schwarzwalder's Natur Weinhaus"
      },
      {
        "from": [
          "Paquebot \\France\\\"\"",
          "Paquebot France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot \\France\\\"\""
      },
      {
        "from": [
          "Childs' Lunch Rooms",
          "Child's Lunch Rooms"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Childs' Lunch Rooms"
      },
      {
        "from": [
          "Red Star Line S.S. Southwark",
          "Red Star Line S.S.Southwark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line S.S. Southwark"
      },
      {
        "from": [
          "Imperial",
          "Imperial (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial"
      },
      {
        "from": [
          "U.S.S. San Francisco",
          "U.S.S.San Francisco"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. San Francisco"
      },
      {
        "from": [
          "The Round Table",
          "The Roundtable"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Round Table"
      },
      {
        "from": [
          "Hotel Knickerbocker",
          "Hotel Knickerbocker (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Knickerbocker"
      },
      {
        "from": [
          "Sherry's",
          "Sherrys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherry's"
      },
      {
        "from": [
          "St. George's Society Of New York",
          "St.George's Society Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George's Society Of New York"
      },
      {
        "from": [
          "National Cooper's Association",
          "National Coopers Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "National Cooper's Association"
      },
      {
        "from": [
          "Healy's Forty-second Street restaurant",
          "Healy's Forty-second Street Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Healy's Forty-second Street restaurant"
      },
      {
        "from": [
          "Business Men's League Of St. Louis",
          "Business Men's League Of St.Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Business Men's League Of St. Louis"
      },
      {
        "from": [
          "Pig'n Whistle",
          "Pig N'whistle"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pig'n Whistle"
      },
      {
        "from": [
          "St. Regis Hotel",
          "St.Regis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Regis Hotel"
      },
      {
        "from": [
          "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota",
          "Military Order Of The Loyal Legion Of The United States. Commandery Of The State Of Minnesota"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota"
      },
      {
        "from": [
          "S.S New Amsterdam",
          "S.S. New Amsterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S New Amsterdam"
      },
      {
        "from": [
          "Rigg's Twentieth Street Restaurant",
          "Riggs' Twentieth Street Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rigg's Twentieth Street Restaurant"
      },
      {
        "from": [
          "U. S. S. Wyoming",
          "U.S.S. Wyoming"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U. S. S. Wyoming"
      },
      {
        "from": [
          "Penn Rr Pullman Dining Car Service",
          "Penn. Rr Pullman Dining Car Service"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Penn Rr Pullman Dining Car Service"
      },
      {
        "from": [
          "American Bankers Association",
          "American Bankers' Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Bankers Association"
      },
      {
        "from": [
          "The Southern Berkshire Society Of New York",
          "Southern Berkshire Society Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Southern Berkshire Society Of New York"
      },
      {
        "from": [
          "Alta Vista Hotel",
          "Alta Vista Hotel (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alta Vista Hotel"
      },
      {
        "from": [
          "Chamber Of Commerce",
          "Chamber of Commerce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chamber Of Commerce"
      },
      {
        "from": [
          "R.M.S. Parthia",
          "R.M.S. \"Parthia\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Parthia"
      },
      {
        "from": [
          "Grocers Hall",
          "Grocers' Hall"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grocers Hall"
      },
      {
        "from": [
          "Rogers'restaurant",
          "Roger's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rogers'restaurant"
      },
      {
        "from": [
          "Cafe Boulevard",
          "Café Boulevard"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Boulevard"
      },
      {
        "from": [
          "The Mouquin Restaurant and Wine Co.",
          "The Mouquin Restaurant And Wine Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Mouquin Restaurant and Wine Co."
      },
      {
        "from": [
          "Cromwell Steamship Company",
          "Cromwelll Steamship Company"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cromwell Steamship Company"
      },
      {
        "from": [
          "Red Star Line Ss Westernland",
          "Red Star Line S.S.Westernland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line Ss Westernland"
      },
      {
        "from": [
          "Willard's Hotel",
          "Willards Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Willard's Hotel"
      },
      {
        "from": [
          "Cafe De Paris",
          "Café de Paris"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe De Paris"
      },
      {
        "from": [
          "Compagnie Générale Transatlantique",
          "Compagnie Generale Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compagnie Générale Transatlantique"
      },
      {
        "from": [
          "O.D.",
          "O. D."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "O.D."
      },
      {
        "from": [
          "B&O Blue Line",
          "B.& O. Blue Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "B&O Blue Line"
      },
      {
        "from": [
          "R.G.(?)",
          "Rg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.G.(?)"
      },
      {
        "from": [
          "St. Andrew's Society Of The State Of New York",
          "St.Andrews Society Of The State Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Andrew's Society Of The State Of New York"
      },
      {
        "from": [
          "New England Society In The City Of New York",
          "The New England Society In The City Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New England Society In The City Of New York"
      },
      {
        "from": [
          "U.S.M.S St. Paul",
          "U.S.M.S.St. Paul"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S St. Paul"
      },
      {
        "from": [
          "Canadian Pacific Railway Co. S.S.Athabasca",
          "Canadian Pacific Railway Co. S.S. Athabasca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canadian Pacific Railway Co. S.S.Athabasca"
      },
      {
        "from": [
          "Nordeutscher Lloyd Bremen",
          "Nordeutscher Lloyd, Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nordeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Hotel La Salle",
          "Hotel LaSalle"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel La Salle"
      },
      {
        "from": [
          "St. Charles Hotel",
          "St Charles Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel"
      },
      {
        "from": [
          "St. Francis Hotel",
          "St.Francis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Francis Hotel"
      },
      {
        "from": [
          "Santa Fe Route",
          "Santa Fe' Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Santa Fe Route"
      },
      {
        "from": [
          "Merchant's Club Of Boston",
          "Merchants' Club Of Boston"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Merchant's Club Of Boston"
      },
      {
        "from": [
          "Adams' Restaurant",
          "Adam's Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adams' Restaurant"
      },
      {
        "from": [
          "Ancient And Honorable Artillery Co Of Massachusetts",
          "Ancient And Honorable Artillery Co. Of Massachusetts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ancient And Honorable Artillery Co Of Massachusetts"
      },
      {
        "from": [
          "New York Central System",
          "[New York Central System]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central System"
      },
      {
        "from": [
          "Paquebot \\Liberté\\\"\"",
          "Paquebot Liberte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot \\Liberté\\\"\""
      },
      {
        "from": [
          "Hotel McAlpin",
          "Hotel Mc Alpin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel McAlpin"
      },
      {
        "from": [
          "Meyer's Hotel",
          "Meyers Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Meyer's Hotel"
      },
      {
        "from": [
          "Imperial Hotel",
          "Impérial Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial Hotel"
      },
      {
        "from": [
          "Walton's Old Homestead Oyster and Chop House",
          "Walton's Old Homestead Oyster And Chop House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Walton's Old Homestead Oyster and Chop House"
      },
      {
        "from": [
          "Copley-Plaza Hotel",
          "Copley Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copley-Plaza Hotel"
      },
      {
        "from": [
          "Mercantile Lunch Co.",
          "Mercantile lunch Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mercantile Lunch Co."
      },
      {
        "from": [
          "Pacific Mail S.S. Co.",
          "Pacific Mail Ss Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pacific Mail S.S. Co."
      },
      {
        "from": [
          "Nippon Yusen Kaisha S.S.Nasuga",
          "Nippon Yusen Kaisha S.S. Nasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha S.S.Nasuga"
      },
      {
        "from": [
          "R.M.S. \"Queen Mary\"\"\"",
          "R.M.S. \\Queen Mary\\\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \"Queen Mary\"\"\""
      },
      {
        "from": [
          "U. S. S. Florida",
          "U.S.S. Florida"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U. S. S. Florida"
      },
      {
        "from": [
          "Pacific Mail Steamship Co./Trans Pacific Line",
          "Pacific Mail Steamship Co. Trans Pacific Line"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pacific Mail Steamship Co./Trans Pacific Line"
      },
      {
        "from": [
          "R.M.S. \\Mauretania\\\"\"",
          "R.M.S. Mauretania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \\Mauretania\\\"\""
      },
      {
        "from": [
          "[Restaurant And/Or Location Not Given.]",
          "[Restaurant And/Or Location Not Given]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[Restaurant And/Or Location Not Given.]"
      },
      {
        "from": [
          "Hotel Du Musee",
          "Hotel Du Musee'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Du Musee"
      },
      {
        "from": [
          "S.S. America",
          "S.S.America"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. America"
      },
      {
        "from": [
          "Flat Iron Restaurant & Cafe",
          "Flatiron Restaurant & Cafe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Restaurant & Cafe"
      },
      {
        "from": [
          "Café Lafayette",
          "Cafe Lafayette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café Lafayette"
      },
      {
        "from": [
          "U.S.M.S.Philadelphia",
          "Usms Philadelphia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S.Philadelphia"
      },
      {
        "from": [
          "Hotel St. Regis",
          "Hotel St.Regis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. Regis"
      },
      {
        "from": [
          "Dinner Menu, S. S. Vaderland, March 18th, 1910.",
          "Dinner Menu, S.S. Vaderland, March 18th, 1910."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "from": [
          "Pirate's House",
          "Pirates' House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pirate's House"
      },
      {
        "from": [
          "Ritz Carlton Hotel",
          "Ritz-Carlton Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ritz Carlton Hotel"
      },
      {
        "from": [
          "Master Printers' Association",
          "Master Printers Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Master Printers' Association"
      },
      {
        "from": [
          "Engineers Club",
          "Engineers' Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Engineers Club"
      },
      {
        "from": [
          "S.S. Minnetonka",
          "S.S. \"Minnetonka\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Minnetonka"
      },
      {
        "from": [
          "Commercial Club Of St. Louis",
          "Commercial Club Of St.Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial Club Of St. Louis"
      },
      {
        "from": [
          "The Cobble Stones",
          "The Cobblestones"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cobble Stones"
      },
      {
        "from": [
          "The Rendez Vous",
          "The Rendez-Vous"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Rendez Vous"
      },
      {
        "from": [
          "S.S. \"Frederik VIII\"",
          "S.S. Frederik VIII"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. \"Frederik VIII\""
      },
      {
        "from": [
          "Fraunces' Tavern",
          "Fraunces Tavern"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fraunces' Tavern"
      },
      {
        "from": [
          "[Not Given]",
          "[Not given]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[Not Given]"
      },
      {
        "from": [
          "Palace Hotel",
          "Palace Hôtel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel"
      },
      {
        "from": [
          "S.S. United States",
          "S. S. United States"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. United States"
      },
      {
        "from": [
          "Ritz Carlton",
          "Ritz-Carlton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ritz Carlton"
      },
      {
        "from": [
          "St. Louis Club",
          "St.Louis Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Louis Club"
      },
      {
        "from": [
          "St. Denis Hotel",
          "St, Denis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "Met-Life Building",
          "MetLife Building"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Met-Life Building"
      },
      {
        "from": [
          "Flat Iron Restaurant",
          "Flatiron Restaurant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Flat Iron Restaurant"
      },
      {
        "from": [
          "Muhlenkamper Fahrhaus",
          "Mühlenkamper Fährhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Muhlenkamper Fahrhaus"
      },
      {
        "from": [
          "Down Town Club",
          "Downtown Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Down Town Club"
      },
      {
        "from": [
          "The Merchant's Club Of Chicago",
          "The Merchants Club Of Chicago"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Merchant's Club Of Chicago"
      },
      {
        "from": [
          "New York Central & Hudson River R.R.",
          "New York Central & Hudson River R.R.."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central & Hudson River R.R."
      },
      {
        "from": [
          "Red Star Line Antwerpen Ny",
          "Red Star Line Antwerpen.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Star Line Antwerpen Ny"
      },
      {
        "from": [
          "Century Club",
          "Century Club?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Century Club"
      },
      {
        "from": [
          "Cunard Steam Ship Company Limited",
          "Cunard Steamship Company Limited"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cunard Steam Ship Company Limited"
      },
      {
        "from": [
          "Smith & Mc Nell",
          "Smith & Mcnell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Smith & Mc Nell"
      },
      {
        "from": [
          "Chicago Stationers Association",
          "Chicagos Stationers Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago Stationers Association"
      },
      {
        "from": [
          "S.S. American Shipper",
          "S.S. \"American Shipper\"\"\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. American Shipper"
      },
      {
        "from": [
          "S.S. \"Ile De France\"\"\"",
          "S.S. Ile De France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. \"Ile De France\"\"\""
      },
      {
        "from": [
          "Cosmopolitan Hotel",
          "Cosmopolitan... Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cosmopolitan Hotel"
      },
      {
        "from": [
          "A.W. Dennett",
          "A.W.Dennett"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A.W. Dennett"
      },
      {
        "from": [
          "Imperial Yacht Club Of St. Petersburg",
          "Imperial Yacht Club Of St.Petersburg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Imperial Yacht Club Of St. Petersburg"
      },
      {
        "from": [
          "Café des Beaux Arts",
          "Café des Beaux-Arts"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café des Beaux Arts"
      },
      {
        "from": [
          "U.S. Army Subsistence Dept.",
          "Us Army Subsistence Dept."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S. Army Subsistence Dept."
      },
      {
        "from": [
          "Ancient Accepted Scottish Rite",
          "Ancient & Accepted Scottish Rite"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ancient Accepted Scottish Rite"
      },
      {
        "from": [
          "Hotel Copley Plaza",
          "Hotel Copley-Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Copley Plaza"
      }
    ],
    "description": "Mass edit cells in column location"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "DELMONICO'S, NEW YORK, NY",
          "DELMONICO'S, [NEW YORK, N.Y.]",
          "DELMONICO'S,[NEW YORK,NY?]",
          "DELMONICOS, [NEW YORK, N.Y.]",
          "DELMONICO'S NEW YORK,NY",
          "DELMONICO'S, (NEW YORK, NY?)",
          "DELMONICO'S, [NEW YORK, NY]",
          "DELMONICO'S, [NEW YORK, NY];",
          "DELMONICO'S, [NEW YORK,N.Y.]",
          "DELMONICO'S,NEW YORK,NY",
          "DELMONICO'S,[NEW YORK, N.Y.]",
          "DELMONICO'S. NEW YORK, NY",
          "DELMONICOS, (NEW YORK, NY?)",
          "DELMONICOS, NEW YORK, NY",
          "[DELMONICO'S,NEW YORK NY]",
          "[DELMONICO'S], NEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S, NEW YORK, NY"
      },
      {
        "from": [
          "DELMONICO'S NY",
          "DELMONICO'S [NY]",
          "DELMONICO'S,NY",
          "DELMONICO'S [NY?]",
          "DELMONICO'S, NY",
          "DELMONICO'S,[NY]",
          "DELMONICO'S[NY]",
          "DELMONICO'S, N.Y.",
          "DELMONICO'S, NY;",
          "DELMONICO'S, [NY]",
          "DELMONICO'S,(NY?)",
          "DELMONICOS NY",
          "DELMONICOS', NY",
          "DELMONICOS, (NY)",
          "DELMONICOS,[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S NY"
      },
      {
        "from": [
          "NEW YORK, NY",
          "NEW YORK, [NY]",
          "[NEW YORK, NY]",
          "NEW YORK,NY",
          "[NEW YORK, NY?]",
          "(NEW YORK, NY?)",
          "(NEW YORK,NY)",
          "NEW YORK, [NY];",
          "[NEW YORK,NY]",
          "NEW YORK [NY]",
          "NEW YORK, NY [?]",
          "NEW YORK,[NY]",
          "[New York, NY]",
          "[NEW YORK, NY];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK, NY"
      },
      {
        "from": [
          "PHILADELPHIA, PA",
          "PHILADELPHIA [PA]",
          "PHILADELPHIA,PA.",
          "[PHILADELPHIA, PA]",
          "PHILADELPHIA,PA",
          "PHILADELPHIA, PA.",
          "PHILADELPHIA, [PA]",
          "PHILADELPHIA,[PA]",
          "PHILADELPHIA. PA",
          "[PHILADELPHIA, PA?]",
          "[PHILADELPHIA,PA.]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PHILADELPHIA, PA"
      },
      {
        "from": [
          "SAN FRANCISCO, CA",
          "[SAN FRANCISCO,CA]",
          "SAN FRANCISCO,CA;",
          "SAN FRANCISCO,[CA?]",
          "(SAN FRANCISCO, CA?)",
          "SAN FRANCISCO, CA;",
          "SAN FRANCISCO,CA",
          "SAN FRANCISCO,CA.",
          "[SAN FRANCISCO, CA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SAN FRANCISCO, CA"
      },
      {
        "from": [
          "NEW YORK",
          "[NEW YORK]",
          "(NEW YORK?)",
          "NEW YORK;",
          "\"NEW YORK\"",
          "(NEW YORK)",
          "NEW YORK (?)",
          "NEW YORK(?)",
          "NEW YORK?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK"
      },
      {
        "from": [
          "AUDITORIUM HOTEL [CHICAGO, IL]",
          "AUDITORIUM HOTEL, CHICAGO, IL",
          "AUDITORIUM HOTEL , CHICAGO, IL",
          "AUDITORIUM HOTEL [CHICAGO IL]",
          "AUDITORIUM HOTEL, (?CHICAGO, IL?)",
          "AUDITORIUM HOTEL, (CHICAGO, IL?)",
          "AUDITORIUM HOTEL, CHICAGO [IL]",
          "AUDITORIUM HOTEL, CHICAGO, [IL]",
          "AUDITORIUM HOTEL,[CHICAGO, IL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AUDITORIUM HOTEL [CHICAGO, IL]"
      },
      {
        "from": [
          "CHICAGO, IL",
          "CHICAGO, [IL]",
          "[CHICAGO, IL]",
          "(CHICAGO,IL)",
          "CHICAGO IL",
          "CHICAGO [IL]",
          "CHICAGO,IL.",
          "CHICAGO,[IL]",
          "[CHICAGO IL?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHICAGO, IL"
      },
      {
        "from": [
          "DELMONICO'S [NEW YORK]",
          "DELMONICO'S, [NEW YORK]",
          "DELMONICO'S,[NEW YORK]",
          "DELMONICOS,[NEW YORK]",
          "(DELMONICO'S.NEW YORK)",
          "DELMONICO'S, NEW YORK",
          "DELMONICO'S,( NEW YORK)",
          "DELMONICOS, NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S [NEW YORK]"
      },
      {
        "from": [
          "CHICAGO,ILL.",
          "(CHICAGO, ILL)",
          "CHICAGO,ILL;",
          "CHICAGO ,ILL",
          "CHICAGO, ILL",
          "CHICAGO,ILL",
          "[CHICAGO,ILL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHICAGO,ILL."
      },
      {
        "from": [
          "EN ROUTE \"FRIEDRICH DER GROSSE\"",
          "EN ROUTE - \"FRIEDRICH DER GROSSE\"",
          "EN ROUTE \" FRIEDRICH DER GROSSE\"",
          "EN ROUTE \"FRIEDRICH DER GROSSE \"",
          "EN ROUTE 'FRIEDRICH DER GROSSE\"",
          "EN ROUTE - 'FRIEDRICH DER GROSSE \"",
          "EN ROUTE - :FRIEDRICH DER GROSSE\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE \"FRIEDRICH DER GROSSE\""
      },
      {
        "from": [
          "NASSAU, N.P. BAHAMAS",
          "NASSAU,N.P.BAHAMAS",
          "NASSAU,NP,BAHAMAS",
          "NASSAU, N.P., BAHAMAS",
          "NASSAU,NP;BAHAMAS",
          "[NASSAU, N.P., BAHAMAS]",
          "[NASSAU,N.P.,BAHAMAS]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NASSAU, N.P. BAHAMAS"
      },
      {
        "from": [
          "WASHINGTON, DC",
          "WASHINGTON,D.C.",
          "WASHINGTON, D.C.",
          "WASHINGTON,DC",
          "WASHINGTON DC",
          "WASHINGTON,[D.C.]",
          "[WASHINGTON,DC]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WASHINGTON, DC"
      },
      {
        "from": [
          "BROOKLYN, NY",
          "BROOKLYN,NY",
          "[BROOKLYN, NY]",
          "BROOKLYN NY",
          "BROOKLYN,NY(?)",
          "BROOKLYN[NY]",
          "[BROOKLYN,NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROOKLYN, NY"
      },
      {
        "from": [
          "PROVIDENCE, RI",
          "PROVIDENCE, R.I.",
          "PROVIDENCE RI",
          "PROVIDENCE,RI;",
          "[PROVIDENCE RI?]",
          "[PROVIDENCE, R.I.]",
          "[PROVIDENCE, RI?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PROVIDENCE, RI"
      },
      {
        "from": [
          "PARIS,FRANCE",
          "PARIS, FRANCE",
          "(PARIS,FRANCE)",
          "PARIS, FRANCE(?)",
          "PARIS, [FRANCE]",
          "[PARIS, FRANCE?]",
          "[PARIS, FRANCE]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARIS,FRANCE"
      },
      {
        "from": [
          "DETROIT, MI",
          "DETROIT,MI",
          "(DETROIT, MI?)",
          "(DETROIT,MI?)",
          "DETROIT, [MI]",
          "DETROIT,[MI?]",
          "[DETROIT, MI]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DETROIT, MI"
      },
      {
        "from": [
          "ST. LOUIS, MO",
          "ST. LOUIS, [MO];",
          "[ST.LOUIS,MO?]",
          "ST LOUIS,MO",
          "ST. LOUIS [MO]",
          "[ST.LOUIS, MO]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. LOUIS, MO"
      },
      {
        "from": [
          "OLD POINT COMFORT, VA",
          "OLD POINT COMFORT,VA",
          "OLD POINT COMFORT VA",
          "OLD POINT COMFORT, VA.",
          "OLD POINT, COMFORT, VA",
          "[OLD POINT COMFORT, VA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OLD POINT COMFORT, VA"
      },
      {
        "from": [
          "ATLANTIC CITY, NJ",
          "ATLANTIC CITY,NJ",
          "ATLANTIC CITY, N.J.",
          "ATLANTIC CITY, NJ;",
          "ATLANTIC CITY,[NJ]",
          "[ATLANTIC CITY, NJ]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ATLANTIC CITY, NJ"
      },
      {
        "from": [
          "BUFFALO, NY",
          "BUFFALO,NY",
          "(BUFFALO, NY?)",
          "BUFFALO NY(?)",
          "[BUFFALO, NY",
          "[BUFFALO, NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BUFFALO, NY"
      },
      {
        "from": [
          "ROME, ITALY",
          "(ROME,ITALY)",
          "ROME [ITALY]",
          "ROME,ITALY",
          "ROME ITALY",
          "[ROME, ITALY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROME, ITALY"
      },
      {
        "from": [
          "LONG BEACH, L.I, NY",
          "LONG BEACH, LI, [NY];",
          "LONG BEACH, L.I., NY",
          "LONG BEACH,L.I.,NY;",
          "LONG BEACH,L.I.,[NY&]",
          "LONG BEACH,LI,[NY?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LONG BEACH, L.I, NY"
      },
      {
        "from": [
          "GRAND HOTEL, CINCINNATI OH",
          "GRAND HOTEL, CINCINNATI OH;",
          "GRAND HOTEL, CINCINNATI [OH]",
          "GRAND HOTEL, CINCINNATI, OH",
          "GRAND HOTEL, [CINCINNATI, OH]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND HOTEL, CINCINNATI OH"
      },
      {
        "from": [
          "RMS CAMPANIA",
          "R.M.S. CAMPANIA",
          "R.M.S. \"CAMPANIA\"",
          "R.M.S. \" CAMPANIA\"",
          "R.M.S.\"CAMPANIA\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RMS CAMPANIA"
      },
      {
        "from": [
          "SHERRY'S [NY]",
          "SHERRY'S NY",
          "SHERRY'S, NY",
          "SHERRY'S (NY?)",
          "SHERRYS, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHERRY'S [NY]"
      },
      {
        "from": [
          "LONDON, ENGLAND",
          "[LONDON,ENGLAND]",
          "LONDON,[ENGLAND]",
          "LONDON,ENGLAND",
          "[LONDON,ENGLAND ?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LONDON, ENGLAND"
      },
      {
        "from": [
          "QUEBEC, CANADA",
          "QUEBEC [CANADA]",
          "QUEBEC,CANADA",
          "QUEBEC,[ CANADA]",
          "QUEBEC, [CANADA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "QUEBEC, CANADA"
      },
      {
        "from": [
          "HOTEL BRUNSWICK NY",
          "HOTEL BRUNSWICK,NY",
          "HOTEL BRUNSWICK [NY?]",
          "HOTEL BRUNSWICK, NY",
          "HOTEL BRUNSWICK; NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL BRUNSWICK NY"
      },
      {
        "from": [
          "CLINTON COUNTY, NY",
          "CLINTON COUNTY NY",
          "CLINTON COUNTY, NY.",
          "CLINTON COUNTY,NY",
          "CLINTON COUNTY.NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLINTON COUNTY, NY"
      },
      {
        "from": [
          "EN ROUTE - SS \"LAHN\"",
          "EN ROUTE - \"SS LAHN\"",
          "EN ROUTE \"SS LAHN\"",
          "EN ROUTE -SS \"LAHN\"",
          "EN ROUTE _ SS \"LAHN\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE - SS \"LAHN\""
      },
      {
        "from": [
          "LOS ANGELES,CA",
          "LOS ANGELES, CA;",
          "LOS ANGELES,CA;",
          "LOS ANGELES,[CA?]",
          "LOS ANGELES, CA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LOS ANGELES,CA"
      },
      {
        "from": [
          "SS FRIESLAND",
          "S.S. FRIESLAND",
          "SS. FRIESLAND",
          "S.S. \"FRIESLAND\"",
          "SS; \"FRIESLAND\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS FRIESLAND"
      },
      {
        "from": [
          "NARRAGANSETT PIER R.I.",
          "NARRAGANSETT PIER, RI",
          "NARAGANSETT PIER, RI",
          "NARRAGANSETT PIER,R.I.",
          "NARRAGANSETT PIER,RI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NARRAGANSETT PIER R.I."
      },
      {
        "from": [
          "SARATOGA SPRINGS, NY",
          "SARATOGA SPRINGS,NY",
          "SARATOGA SPRINGS, NY.",
          "SARATOGA SPRINGS, [NY]",
          "SARATOGA SPRINGS,[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SARATOGA SPRINGS, NY"
      },
      {
        "from": [
          "EN ROUTE S.S.\"BARBAROSSA\"",
          "EN ROUTE - S.S.BARBAROSSA",
          "EN ROUTE S.S \"BARBAROSSA\"",
          "EN ROUTE; S.S.BARBAROSSA",
          "EN ROUTE; S.S.BARBAROSSA\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE S.S.\"BARBAROSSA\""
      },
      {
        "from": [
          "CLEVELAND, OH",
          "[CLEVELAND, OH]",
          "CLEVELAND,OH",
          "CLEVELAND [OH]",
          "CLEVELAND,[OH?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLEVELAND, OH"
      },
      {
        "from": [
          "BOSTON,MASS",
          "BOSTON,MASS;",
          "(BOSTON,MASS)",
          "BOSTON, MASS.",
          "BOSTON, MASS;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOSTON,MASS"
      },
      {
        "from": [
          "NY",
          "[NY]",
          "(NY)",
          "(N.Y.)",
          "(NY?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NY"
      },
      {
        "from": [
          "WALDORF ASTORIA, NY",
          "WALDORF-ASTORIA,NY",
          "WALDORF-ASTORIA,[NY]",
          "WALDORF-ASTORIA [NY?]",
          "WALDORF-ASTORIA, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF ASTORIA, NY"
      },
      {
        "from": [
          "HOTEL MANHATTAN, NY",
          "HOTEL MANHATTAN,NY",
          "HOTEL MANHATTAN [NY]",
          "HOTEL MANHATTAN, [NY]",
          "HOTEL MANHATTAN,[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MANHATTAN, NY"
      },
      {
        "from": [
          "QUEEN CITY CLUB, [CINCINNATI, OH]",
          "QUEEN CITY CLUB (CINCINNATI OH?)",
          "QUEEN CITY CLUB CINCINNATI OH",
          "QUEEN CITY CLUB, CINCINNATI, OH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "QUEEN CITY CLUB, [CINCINNATI, OH]"
      },
      {
        "from": [
          "COPENHAGEN, DENMARK",
          "COPENHAGEN,DENMARK",
          "[COPENHAGEN DENMARK?]",
          "[COPENHAGEN, DENMARK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COPENHAGEN, DENMARK"
      },
      {
        "from": [
          "HOTEL IROQUOIS, BUFFALO, NY",
          "HOTEL IROQUOIS, BUFFALO,NY",
          "HOTEL IROQUOIS,(BUFFALO,N.Y.)",
          "HOTEL IROQUOIS,BUFFALO,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL IROQUOIS, BUFFALO, NY"
      },
      {
        "from": [
          "PARKER HOUSE [BOSTON,MASS ?]",
          "PARKER HOUSE, BOSTON,MASS",
          "PARKER HOUSE,BOSTON,MASS;",
          "PARKER HOUSE,[BOSTON,MASS]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARKER HOUSE [BOSTON,MASS ?]"
      },
      {
        "from": [
          "NASSAU,N.P.",
          "NASSAU, N. P.,",
          "NASSAU, NP",
          "[NASSAU, N.P.]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NASSAU,N.P."
      },
      {
        "from": [
          "ROANOKE, VA",
          "ROANOKE, VA;",
          "ROANOKE,VA",
          "ROANOKE,VA;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROANOKE, VA"
      },
      {
        "from": [
          "MERCANTILE CLUB (ST LOUIS, MO)",
          "MERCANTILE CLUB, ST LOUIS [MO]",
          "MERCANTILE CLUB, ST. LOUIS, MO",
          "MERCANTILE CLUB, ST.LOUIS MO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MERCANTILE CLUB (ST LOUIS, MO)"
      },
      {
        "from": [
          "THE ARLINGTON, WASHINGTON, D.C.",
          "THE ARLINGTON (WASHINGTON DC?)",
          "THE ARLINGTON, WASHINGTON, DC",
          "THE ARLINGTON, WASHINGTON,DC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE ARLINGTON, WASHINGTON, D.C."
      },
      {
        "from": [
          "PLANTERS HOTEL, (ST.LOUIS, MO?)",
          "PLANTERS HOTEL, ST. LOUIS, [MO]",
          "PLANTERS HOTEL, ST. LOUIS,[MO]",
          "PLANTERS HOTEL, ST.LOUIS,MO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PLANTERS HOTEL, (ST.LOUIS, MO?)"
      },
      {
        "from": [
          "R.M.S. \"ETRURIA\"",
          "R. M. S. ETRURIA",
          "R.M.S. ETRURIA",
          "RMS ETRURIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \"ETRURIA\""
      },
      {
        "from": [
          "SS CITY OF RIO DE JANEIRO",
          "S.S. \"CITY OF RIO DE JANEIRO\"",
          "[SS CITY OF RIO DE JANEIRO?]",
          "[SS CITY OF RIO DE JANEIRO]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS CITY OF RIO DE JANEIRO"
      },
      {
        "from": [
          "HOTEL SAVOY [NEW YORK]",
          "HOTEL SAVOY, NEW YORK",
          "HOTEL SAVOY, [NEW YORK]",
          "HOTEL SAVOY; NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SAVOY [NEW YORK]"
      },
      {
        "from": [
          "WALDORF-ASTORIA, NEW YORK",
          "WALDORF-ASTORIA [NEW YORK]",
          "WALDORF-ASTORIA, [NEW YORK]",
          "WALDORF- ASTORIA, NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF-ASTORIA, NEW YORK"
      },
      {
        "from": [
          "THE AUDITORIUM [CHICAGO, IL]",
          "THE AUDITORIUM, CHICAGO, IL",
          "THE AUDITORIUM CHICAGO IL",
          "THE AUDITORIUM, [CHICAGO, IL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE AUDITORIUM [CHICAGO, IL]"
      },
      {
        "from": [
          "BOSTON, MA",
          "BOSTON,MA.",
          "BOSTON MA",
          "BOSTON; MA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOSTON, MA"
      },
      {
        "from": [
          "ST.AUGUSTINE,FLA.",
          "ST. AUGUSTINE, FLA",
          "ST. AUGUSTINE, FLA.",
          "ST.AUGUSTINE, FLA."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST.AUGUSTINE,FLA."
      },
      {
        "from": [
          "SOUTHERN HOTEL, ST. LOUIS, MO",
          "SOUTHERN HOTEL, [ST. LOUIS, MO]",
          "SOUTHERN HOTEL,ST. LOUIS,MO.",
          "SOUTHERN HOTEL,[ST.LOUIS,MO]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOUTHERN HOTEL, ST. LOUIS, MO"
      },
      {
        "from": [
          "UNION LEAGUE PHILADELPHIA [PA?]",
          "UNION LEAGUE, [PHILADELPHIA, PA]",
          "UNION LEAGUE,(PHILADELPHIA,PA)",
          "UNION LEAGUE,[PHILADELPHIA,PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION LEAGUE PHILADELPHIA [PA?]"
      },
      {
        "from": [
          "BERGEN, NORWAY",
          "BERGEN,NORWAY",
          "(BERGEN, NORWAY)",
          "[BERGEN, NORWAY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BERGEN, NORWAY"
      },
      {
        "from": [
          "YOUNG'S HOTEL, BOSTON, MA",
          "YOUNG\"S HOTEL, BOSTON, MA",
          "YOUNG'S HOTEL, [BOSTON MA?]",
          "YOUNGS HOTEL,BOSTON,MA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "YOUNG'S HOTEL, BOSTON, MA"
      },
      {
        "from": [
          "CINCINNATI, OH",
          "CINCINNATI [OH]",
          "CINCINNATI,OH",
          "[CINCINNATI,OH?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CINCINNATI, OH"
      },
      {
        "from": [
          "MELBOURNE, AUSTRALIA",
          "MELBOURNE,AUSTRALIA",
          "MELBOURNE [AUSTRALIA?]",
          "[MELBOURNE,AUSTRALIA?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MELBOURNE, AUSTRALIA"
      },
      {
        "from": [
          "MONTREAL [CANADA?]",
          "MONTREAL, CANADA",
          "MONTREAL, [CANADA]",
          "MONTREAL,CANADA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MONTREAL [CANADA?]"
      },
      {
        "from": [
          "HAMBURG, GERMANY",
          "HAMBURG, [GERMANY]",
          "HAMBURG,GERMANY",
          "HAMBURG,[GERMANY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HAMBURG, GERMANY"
      },
      {
        "from": [
          "HOTEL SAVOY, NY",
          "HOTEL SAVOY,[NY]",
          "HOTEL SAVOY NY",
          "HOTEL SAVOY, [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SAVOY, NY"
      },
      {
        "from": [
          "SS WESTERNLAND",
          "S.S. WESTERNLAND",
          "S.S. \"WESTERNLAND\"",
          "S.S.WESTERNLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS WESTERNLAND"
      },
      {
        "from": [
          "PUT-IN-BAY-ISLAND, LAKE ERIE, OH;",
          "PUT-IN-BAY ISLAND, LAKE ERIE, OH",
          "PUT-IN-BAY-ISLAND, LAKE ERIE, OH",
          "PUT-IN-BAY ISLAND, LAKE ERIE, OH;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PUT-IN-BAY-ISLAND, LAKE ERIE, OH;"
      },
      {
        "from": [
          "THE NEW WILLARD, WASHINGTON, DC",
          "THE NEW WILLARD [WASHINGTON, DC",
          "THE NEW WILLARD, WASHINGTON DC",
          "THE NEW WILLARD, WASHINGTON, D.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE NEW WILLARD, WASHINGTON, DC"
      },
      {
        "from": [
          "AT SEA",
          "[AT SEA ?]",
          "(AT SEA)",
          "[AT SEA?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AT SEA"
      },
      {
        "from": [
          "HOTEL VENDOME, BOSTON, MA",
          "HOTEL VENDOME, [BOSTON, MA];",
          "HOTEL VENDOME,BOSTON.MA",
          "HOTEL VENDOME; BOSTON, MA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL VENDOME, BOSTON, MA"
      },
      {
        "from": [
          "ST. CHARLES HOTEL, NEW ORLEANS LA",
          "ST. CHARLES HOTEL, NEW ORLEANS, LA",
          "ST. CHARLES HOTEL,NEW ORLEANS,LA",
          "ST. CHARLES HOTEL,NEW ORLEANS,[LA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. CHARLES HOTEL, NEW ORLEANS LA"
      },
      {
        "from": [
          "57 BROAD STREET, NEW YORK, [NY]",
          "57 BROAD STREET,NEW YORK,NY",
          "57 BROAD STREET, NEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 BROAD STREET, NEW YORK, [NY]"
      },
      {
        "from": [
          "CHICAGO BEACH HOTEL [CHICAGO, IL]",
          "CHICAGO BEACH HOTEL, CHICAGO, [IL];",
          "CHICAGO BEACH HOTEL, [CHICAGO.IL?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHICAGO BEACH HOTEL [CHICAGO, IL]"
      },
      {
        "from": [
          "66TH ST AND BROADWAY,NEW YORK,NY",
          "66TH ST. AND BROADWAY;NEW YORK,NY",
          "[66TH ST AND BROADWAY,NEW YORK,NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66TH ST AND BROADWAY,NEW YORK,NY"
      },
      {
        "from": [
          "WHITE MOUNTAINS, NH",
          "WHITE MOUNTAINS, NH;",
          "WHITE MOUNTAINS,N.H."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WHITE MOUNTAINS, NH"
      },
      {
        "from": [
          "WALDORF-ASTORIA, NEW YORK, NY",
          "WALDORF ASTORIA, NEW YORK, NY",
          "WALDORF ASTORIA,NEW YORK,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF-ASTORIA, NEW YORK, NY"
      },
      {
        "from": [
          "CINCINNATI,OHIO",
          "CINCINNATI , OHIO",
          "CINCINNATI, OHIO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CINCINNATI,OHIO"
      },
      {
        "from": [
          "NEW ORLEANS, LA",
          "NEW ORLEANS, [LA]",
          "NEW ORLEANS,[LA?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ORLEANS, LA"
      },
      {
        "from": [
          "CLEVELAND,OHIO",
          "CLEVELAND, OHIO",
          "CLEVELAND. OHIO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CLEVELAND,OHIO"
      },
      {
        "from": [
          "MIAMI BISCAYNE BAY,FLA.",
          "MIAMI BISCAYNE BAY, FLA.",
          "MIAMI,BISCAYNE BAY,FLA."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MIAMI BISCAYNE BAY,FLA."
      },
      {
        "from": [
          "MANHATTAN HOTEL,NY",
          "MANHATTAN HOTEL NY",
          "MANHATTAN HOTEL, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MANHATTAN HOTEL,NY"
      },
      {
        "from": [
          "WALDORF-ASTORIA, THE, NEW YORK, NY",
          "WALDORF ASTORIA,THE, NEW YORK, NY",
          "WALDORF-ASTORIA,THE,[NEW YORK,NY?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF-ASTORIA, THE, NEW YORK, NY"
      },
      {
        "from": [
          "ZERMATT, [SWITZERLAND]",
          "(ZERMATT, SWITZERLAND?)",
          "ZERMATT [SWITZERLAND]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ZERMATT, [SWITZERLAND]"
      },
      {
        "from": [
          "SYRACUSE NY",
          "SYRACUSE,NY",
          "SYRACUSE, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SYRACUSE NY"
      },
      {
        "from": [
          "NEW YORK CITY",
          "[NEW YORK CITY]",
          "[?NEW YORK CITY?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK CITY"
      },
      {
        "from": [
          "SS KASUGA",
          "S.S. KASUGA",
          "SS: KASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS KASUGA"
      },
      {
        "from": [
          "EN ROUTE ABOARD SS KOBE MARU",
          "EN ROUTE ABOARD SS. KOBE MARU",
          "EN ROUTE ABOARD SS.KOBE MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD SS KOBE MARU"
      },
      {
        "from": [
          "HOFFMAN HOUSE NEW YORK, NY",
          "HOFFMAN HOUSE, NEW YORK, NY",
          "HOFFMAN HOUSE,NEW YORK,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOFFMAN HOUSE NEW YORK, NY"
      },
      {
        "from": [
          "PUT-IN-BAY ISLAND, OH",
          "PUT IN BAY ISLAND, OH",
          "PUT-IN-BAY-ISLAND, OH;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PUT-IN-BAY ISLAND, OH"
      },
      {
        "from": [
          "SS CITY OF PARA",
          "S.S. \"CITY OF PARA\"",
          "S.S. \"CITY OF PARA'"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS CITY OF PARA"
      },
      {
        "from": [
          "ARGYLE, THE, BROOKLYN, NY",
          "ARGYLE,THE,BROOKLYN,NY",
          "ARGYLE,THE,[BROOKLYN,NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ARGYLE, THE, BROOKLYN, NY"
      },
      {
        "from": [
          "BALTIMORE, MD",
          "BALTIMORE,MD",
          "BALTIMORE,MD."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BALTIMORE, MD"
      },
      {
        "from": [
          "EN ROUTE, EXPRESS-STEAMER FURST BISMARCK",
          "EN-ROUTE EXPRESS-STEAMER FURST BISMARCK",
          "ENROUTE EXPRESS STEAMER \"FURST BISMARCK\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE, EXPRESS-STEAMER FURST BISMARCK"
      },
      {
        "from": [
          "KONIGIN LUISE",
          "\"KONIGIN LUISE\"",
          "KONIGIN LUISE;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KONIGIN LUISE"
      },
      {
        "from": [
          "NEW ALGONQUIN CLUB, BOSTON, MA",
          "NEW ALGONQUIN CLUB [BOSTON, MA]",
          "NEW ALGONQUIN CLUB, (BOSTON, MA?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW ALGONQUIN CLUB, BOSTON, MA"
      },
      {
        "from": [
          "WINDSOR HOTEL, [NY]",
          "WINDSOR HOTEL,(NY)",
          "WINDSOR HOTEL[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINDSOR HOTEL, [NY]"
      },
      {
        "from": [
          "SS: KAMAKURA MARU",
          "SS: \"KAMAKURA MARU\"",
          "SS; KAMAKURA MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS: KAMAKURA MARU"
      },
      {
        "from": [
          "SS DORIC",
          "SS DORIC;",
          "S.S. \"DORIC\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS DORIC"
      },
      {
        "from": [
          "DENVER, COLO.",
          "DENVER, COLO;",
          "DENVER,COLO."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DENVER, COLO."
      },
      {
        "from": [
          "VIRGINIA BEACH, VA",
          "VIRGINIA BEACH VA",
          "VIRGINIA BEACH,VA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "VIRGINIA BEACH, VA"
      },
      {
        "from": [
          "ST. PETERSBURG (RUSSIA?)",
          "ST. PETERSBURG,[RUSSIA]",
          "ST. PETERSBURG.RUSSIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. PETERSBURG (RUSSIA?)"
      },
      {
        "from": [
          "NAPLES [ITALY]",
          "NAPLES,[ITALY]",
          "NAPLES, ITALY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NAPLES [ITALY]"
      },
      {
        "from": [
          "R.M.S. \"LUCANIA\"",
          "RMS LUCANIA",
          "R.M.S. LUCANIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \"LUCANIA\""
      },
      {
        "from": [
          "FANEUIL HALL, BOSTON, [MASS]",
          "FANEUIL HALL, [BOSTON,MASS]",
          "FANEUIL HALL,BOSTON,MASS."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FANEUIL HALL, BOSTON, [MASS]"
      },
      {
        "from": [
          "[TOKYO, JAPAN]",
          "TOKYO, JAPAN",
          "[TOKYO,JAPAN]?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "[TOKYO, JAPAN]"
      },
      {
        "from": [
          "THE HOLLENDEN [CLEVELAND OH?]",
          "THE HOLLENDEN, CLEVELAND, OH",
          "THE HOLLENDEN, CLEVELAND; OH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE HOLLENDEN [CLEVELAND OH?]"
      },
      {
        "from": [
          "PORTLAND, ME",
          "PORTLAND,ME",
          "PORTLAND ME"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PORTLAND, ME"
      },
      {
        "from": [
          "HOTEL MANHATTAN, NEW YORK, [NY];",
          "HOTEL MANHATTAN, [NEW YORK, NY]",
          "HOTEL MANHATTAN,NEW YORK [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MANHATTAN, NEW YORK, [NY];"
      },
      {
        "from": [
          "BERLIN, GERMANY",
          "BERLIN [GERMANY]",
          "BERLIN,GERMANY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BERLIN, GERMANY"
      },
      {
        "from": [
          "SS RIO DE JANEIRO",
          "SS: RIO DE JANEIRO",
          "SS; RIO DE JANEIRO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS RIO DE JANEIRO"
      },
      {
        "from": [
          "TAMPA, FL",
          "TAMPA,FL",
          "TAMPA FL?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TAMPA, FL"
      },
      {
        "from": [
          "BELLEVUE-STRATFORD, (PHILADELPHIA, PA?)",
          "BELLEVUE-STRATFORD, PHILADELPHIA, PA",
          "BELLEVUE-STRATFORD, [PHILADELPHIA, PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BELLEVUE-STRATFORD, (PHILADELPHIA, PA?)"
      },
      {
        "from": [
          "ALTOONA, PA",
          "ALTOONA, PA;",
          "ALTOONA,PA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALTOONA, PA"
      },
      {
        "from": [
          "MANILA, P.I.",
          "MANILA, PI",
          "MANILA,P.I."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MANILA, P.I."
      },
      {
        "from": [
          "DINING CAR",
          "Dining Car",
          "DINING CAR;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DINING CAR"
      },
      {
        "from": [
          "ADELAIDE [AUSTRALIA?]",
          "ADELAIDE, AUSTRALIA",
          "[ADELAIDE, AUSTRALIA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ADELAIDE [AUSTRALIA?]"
      },
      {
        "from": [
          "THE WALDORF, NEW YORK, NY",
          "THE WALDORF, [?NEW YORK, NY]",
          "THE WALDORF, [NEW YORK, NY?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE WALDORF, NEW YORK, NY"
      },
      {
        "from": [
          "EN ROUTE S.S.VADERLAND",
          "EN ROUTE S.S VADERLAND",
          "EN ROUTE S.S. VADERLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE S.S.VADERLAND"
      },
      {
        "from": [
          "HOTEL BELLEVUE-STRATFORD [PHILADELPHIA, PA]",
          "HOTEL BELLEVUE-STRATFORD, PHILADELPHIA, PA",
          "HOTEL BELLEVUE-STRATFORD, [PHILADELPHIA, PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL BELLEVUE-STRATFORD [PHILADELPHIA, PA]"
      },
      {
        "from": [
          "EN ROUTE S.S. ZEELAND",
          "EN ROUTE S.S.ZEELAND",
          "EN ROUTE S.S ZEELAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE S.S. ZEELAND"
      },
      {
        "from": [
          "LAKEWOOD, NJ",
          "LAKEWOOD NJ",
          "LAKEWOOD, N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LAKEWOOD, NJ"
      },
      {
        "from": [
          "SS COPTIC",
          "S.S. \"COPTIC\"",
          "S.S. COPTIC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS COPTIC"
      },
      {
        "from": [
          "R.M.S. ROTTERDAM",
          "R.M.S.ROTTERDAM",
          "RMS-ROTTERDAM"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. ROTTERDAM"
      },
      {
        "from": [
          "66 ST. & B'WAY NY",
          "66 ST. & B'WAY. NY",
          "66 ST. & BWAY. NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66 ST. & B'WAY NY"
      },
      {
        "from": [
          "117 WEST 34TH STREET,NEW YORK,NY",
          "117 WEST 34TH STREET,[NEW YORK,NY]",
          "117WEST 34TH STREET,NEW YORK,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "117 WEST 34TH STREET,NEW YORK,NY"
      },
      {
        "from": [
          "KRUEGER AUDITORIUM (NEWARK NJ?)",
          "KRUEGER AUDITORIUM, NEWARK, NJ",
          "KRUEGER AUDITORIUM,NEWARK[NJ]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "KRUEGER AUDITORIUM (NEWARK NJ?)"
      },
      {
        "from": [
          "EN ROUTE ABOARD S.S. WESTERNLAND",
          "EN ROUTE ABOARD S.S. WESTERNLAND;",
          "ENROUTE ABOARD S.S. WESTERNLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD S.S. WESTERNLAND"
      },
      {
        "from": [
          "MILWAUKEE, WI",
          "MILWAUKEE,WI",
          "MILWAUKEE, [WI];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MILWAUKEE, WI"
      },
      {
        "from": [
          "HAVANA, CUBA",
          "HAVANA,CUBA",
          "[HAVANA,CUBA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HAVANA, CUBA"
      },
      {
        "from": [
          "ELLICOTT SQUARE, BUFFALO, NY",
          "ELLICOTT SQUARE,BUFFALO,[NY?]",
          "ELLICOTT SQUARE, BUFFALO, [NY];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ELLICOTT SQUARE, BUFFALO, NY"
      },
      {
        "from": [
          "ELLICOTT CLUB, BUFFALO, NY",
          "ELLICOTT CLUB,BUFFALO,NY",
          "ELLICOTT CLUB (BUFFALO NY?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ELLICOTT CLUB, BUFFALO, NY"
      },
      {
        "from": [
          "ST. DENIS HOTEL; NY",
          "ST.DENIS HOTEL,NY",
          "ST.DENIS HOTEL[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. DENIS HOTEL; NY"
      },
      {
        "from": [
          "LOGAN HOUSE, ALTOONA, PA",
          "LOGAN HOUSE,ALTOONA,PA",
          "LOGAN HOUSE; ALTOONA, PA;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LOGAN HOUSE, ALTOONA, PA"
      },
      {
        "from": [
          "HOTEL WALTON, PHILADELPHIA [PA]",
          "HOTEL WALTON,PHILADELPHIA,PA;",
          "HOTEL WALTON,[PHILADELPHIA,PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL WALTON, PHILADELPHIA [PA]"
      },
      {
        "from": [
          "TAMPA,FLA.",
          "TAMPA, FLA.",
          "TAMPA.FLA."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TAMPA,FLA."
      },
      {
        "from": [
          "EN ROUTE",
          "ENROUTE",
          "[EN ROUTE]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE"
      },
      {
        "from": [
          "WHITEHALL ROOMS, THE HOTEL METROPOLE, LONDON [ENGLAND]",
          "WHITEHALL ROOMS, THE HOTEL METROPOLE, LONDON, [ENGLAND]",
          "WHITEHALL ROOMS,THE HOTEL METROPOLE, LONDON,ENGLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WHITEHALL ROOMS, THE HOTEL METROPOLE, LONDON [ENGLAND]"
      },
      {
        "from": [
          "HOTEL SOMERSET, BOSTON, MA",
          "HOTEL SOMERSET, BOSTON, [MA]",
          "HOTEL SOMERSET, [BOSTON, MA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SOMERSET, BOSTON, MA"
      },
      {
        "from": [
          "R.M.S. \"EMPRESS OF CHINA\"",
          "RMS EMPRESS OF CHINA",
          "R.M.S. EMPRESS OF CHINA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. \"EMPRESS OF CHINA\""
      },
      {
        "from": [
          "COLORADO SPRINGS, CO",
          "[COLORADO SPRINGS, CO]",
          "COLORADO SPRINGS,COLO."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLORADO SPRINGS, CO"
      },
      {
        "from": [
          "FANEUIL HALL, BOSTON, MA",
          "FANEUIL HALL, [BOSTON, MA]",
          "FANEUIL HALL,BOSTON,MA."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FANEUIL HALL, BOSTON, MA"
      },
      {
        "from": [
          "?",
          "[?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "?"
      },
      {
        "from": [
          "HOBOKEN, NJ",
          "HOBOKEN,NJ"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOBOKEN, NJ"
      },
      {
        "from": [
          "R.M.S. EMPRESS OF INDIA",
          "R.M.S. \"EMPRESS OF INDIA\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. EMPRESS OF INDIA"
      },
      {
        "from": [
          "EN ROUTE - S.S.\"H.H.MEIER\"",
          "EN ROUTE -S.S. \"H.H.MEIER\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE - S.S.\"H.H.MEIER\""
      },
      {
        "from": [
          "ABOARD R.M.S. \"ETRURIA\"",
          "ABOARD R.M.S. ETRURIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD R.M.S. \"ETRURIA\""
      },
      {
        "from": [
          "BUCKINGHAM PALACE, LONDON, ENGLAND",
          "BUCKINGHAM PALACE, [ LONDON,ENGLAND]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BUCKINGHAM PALACE, LONDON, ENGLAND"
      },
      {
        "from": [
          "SHERRY'S, NEW YORK, NY",
          "SHERRY'S, [NEW YORK, NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHERRY'S, NEW YORK, NY"
      },
      {
        "from": [
          "OMAHA NEBRASKA",
          "OMAHA, NEBRASKA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OMAHA NEBRASKA"
      },
      {
        "from": [
          "UNION LEAGUE",
          "(UNION LEAGUE?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION LEAGUE"
      },
      {
        "from": [
          "NASHVILLE, [TN?]",
          "NASHVILLE, TN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NASHVILLE, [TN?]"
      },
      {
        "from": [
          "EN ROUTE ABOARD S.S.ZEELAND",
          "EN ROUTE ABOARD S.S. ZEELAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD S.S.ZEELAND"
      },
      {
        "from": [
          "ST. NICHOLAS HOTEL, ST.LOUIS, MO",
          "ST.NICHOLAS HOTEL,ST. LOUIS,MO;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. NICHOLAS HOTEL, ST.LOUIS, MO"
      },
      {
        "from": [
          "THE ARLINGTON,WASH.DC",
          "THE ARLINGTON,WASH.DC."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE ARLINGTON,WASH.DC"
      },
      {
        "from": [
          "PITTSBURGH, PA",
          "[PITTSBURGH, PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PITTSBURGH, PA"
      },
      {
        "from": [
          "(?FLA?)",
          "[FLA.]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(?FLA?)"
      },
      {
        "from": [
          "EN ROUTE ABOARD SCHNELLDAMPFER (EXPRESS STEAMER) AUGUSTE VICTORIA",
          "EN ROUTE ABOARD SCHNELLDAMPFER (EXPRESS STEAMER) AUGUSTE-VICTORIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD SCHNELLDAMPFER (EXPRESS STEAMER) AUGUSTE VICTORIA"
      },
      {
        "from": [
          "The Waldorf-Astoria",
          "THE WALDORF ASTORIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf-Astoria"
      },
      {
        "from": [
          "UNION LEAGUE CLUB, NEW YORK, NY",
          "UNION LEAGUE CLUB, [NEW YORK, NY?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION LEAGUE CLUB, NEW YORK, NY"
      },
      {
        "from": [
          "ST. GEORGE HOTEL",
          "ST.GEORGE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. GEORGE HOTEL"
      },
      {
        "from": [
          "EN ROUTE ABOARD S.S. ZEALANDIA",
          "EN ROUTE ABOARD S.S.ZEALANDIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD S.S. ZEALANDIA"
      },
      {
        "from": [
          "GRAND HOTEL, LONDON, ENGLAND",
          "GRAND HOTEL,LONDON, ENGLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND HOTEL, LONDON, ENGLAND"
      },
      {
        "from": [
          "EN ROUTE ABOARD DAMPFER FRIEDRICH DER GROSSE",
          "EN ROUTE ABOARD DAMPFER FRIEDRICH DER GROSSER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD DAMPFER FRIEDRICH DER GROSSE"
      },
      {
        "from": [
          "LIVERPOOL [ENGLAND?}",
          "LIVERPOOL, [ENGLAND]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LIVERPOOL [ENGLAND?}"
      },
      {
        "from": [
          "SAVOY HOTEL",
          "SAVOY HOTEL, (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SAVOY HOTEL"
      },
      {
        "from": [
          "WORCESTER, MASS",
          "WORCESTER, MASS;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WORCESTER, MASS"
      },
      {
        "from": [
          "S.S. NACOOCHEE",
          "SS NACOOCHEE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. NACOOCHEE"
      },
      {
        "from": [
          "\"THE ARGYLE\"",
          "THE ARGYLE [?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"THE ARGYLE\""
      },
      {
        "from": [
          "CORONADA BEACH, CA.",
          "CORONADA BEACH,CA."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CORONADA BEACH, CA."
      },
      {
        "from": [
          "HOTEL ST. DENIS, NY",
          "HOTEL ST. DENIS,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ST. DENIS, NY"
      },
      {
        "from": [
          "ASCOT [ENGLAND]",
          "ASCOT, ENGLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ASCOT [ENGLAND]"
      },
      {
        "from": [
          "OCEAN HOUSE, NEWPORT, RI",
          "OCEAN HOUSE,NEWPORT,R.I."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "OCEAN HOUSE, NEWPORT, RI"
      },
      {
        "from": [
          "THE AUDITORIUM,CHICAGO,ILL;",
          "THE AUDITORIUM,[CHICAGO,ILL.]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE AUDITORIUM,CHICAGO,ILL;"
      },
      {
        "from": [
          "HOTEL ST GEORGE,NYACK-ON-HUDSON,NY",
          "HOTEL ST.GEORGE,NYACK-ON-HUDSON,[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ST GEORGE,NYACK-ON-HUDSON,NY"
      },
      {
        "from": [
          "MORELLO'S, NEW YORK, NY",
          "MORELLO'S,NEW YORK, N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MORELLO'S, NEW YORK, NY"
      },
      {
        "from": [
          "RESIDENCE-PALAIS, COPENHAGEN, DENMARK",
          "[RESIDENCE-PALAIS, COPENHAGEN, DENMARK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RESIDENCE-PALAIS, COPENHAGEN, DENMARK"
      },
      {
        "from": [
          "PALACE HOTEL, SAN FRANCISCO, CA",
          "PALACE HOTEL, SAN FRANCISCO, CAL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PALACE HOTEL, SAN FRANCISCO, CA"
      },
      {
        "from": [
          "TONTINE HOTEL, NEW HAVEN, CT",
          "TONTINE HOTEL, [NEW HAVEN, CT]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TONTINE HOTEL, NEW HAVEN, CT"
      },
      {
        "from": [
          "THE BELLEVUE-STRATFORD, PHILADELPHIA, PA",
          "THE BELLEVUE-STRATFORD, [PHILADELPHIA, PA?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE BELLEVUE-STRATFORD, PHILADELPHIA, PA"
      },
      {
        "from": [
          "MARLBOROUGH HOTEL, (?)",
          "MARLBOROUGH HOTEL, [?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MARLBOROUGH HOTEL, (?)"
      },
      {
        "from": [
          "PUT-IN-BAY, OH",
          "PUT-IN-BAY, OH;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PUT-IN-BAY, OH"
      },
      {
        "from": [
          "AUDITORIUM, THE, CHICAGO, IL",
          "AUDITORIUM,THE,[CHICAGO,IL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AUDITORIUM, THE, CHICAGO, IL"
      },
      {
        "from": [
          "NARRAGANSETT HOTEL, PROVIDENCE RI",
          "NARRAGANSETT HOTEL, PROVIDENCE, RI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NARRAGANSETT HOTEL, PROVIDENCE RI"
      },
      {
        "from": [
          "LUZERN, SWITZERLAND",
          "LUZERN,SWITZERLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUZERN, SWITZERLAND"
      },
      {
        "from": [
          "PORTLAND, OR",
          "PORTLAND,OR."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PORTLAND, OR"
      },
      {
        "from": [
          "HOTEL COCHRAN, WASHINGTON DC",
          "HOTEL COCHRAN, [WASHINGTON,D.C.]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL COCHRAN, WASHINGTON DC"
      },
      {
        "from": [
          "SOUTH POLAND, ME",
          "SOUTH POLAND,ME."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SOUTH POLAND, ME"
      },
      {
        "from": [
          "PARK ROW BLDG. [NY]",
          "PARK ROW BLDG.NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARK ROW BLDG. [NY]"
      },
      {
        "from": [
          "CHATTANOOGA, TN",
          "CHATTANOOGA,TN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHATTANOOGA, TN"
      },
      {
        "from": [
          "EN ROUTE STEAMER FURST BISMARCK",
          "ENROUTE STEAMER \"FURST BISMARCK\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE STEAMER FURST BISMARCK"
      },
      {
        "from": [
          "ABOARD U.S.M.S. ST. LOUIS",
          "ABOARD U.S.M.S.ST. LOUIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD U.S.M.S. ST. LOUIS"
      },
      {
        "from": [
          "EN ROUTE \"H.H.MEIER\"",
          "EN ROUTE \" H.H.MEIER\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE \"H.H.MEIER\""
      },
      {
        "from": [
          "WACO, TX",
          "WACO,TX"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WACO, TX"
      },
      {
        "from": [
          "TACOMA, [WA?}",
          "TACOMA; WA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TACOMA, [WA?}"
      },
      {
        "from": [
          "HOTEL MAJESTIC [PHILADELPHIA, PA]",
          "HOTEL MAJESTIC, PHILADELPHIA, PA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MAJESTIC [PHILADELPHIA, PA]"
      },
      {
        "from": [
          "SS KAISER WILHELM DER GROSSE",
          "S.S. \"KAISER WILHELM DER GROSSE\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS KAISER WILHELM DER GROSSE"
      },
      {
        "from": [
          "PFISTER HOTEL, MILWAUKEE, WI",
          "PFISTER HOTEL,MILWAUKEE,WIS."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PFISTER HOTEL, MILWAUKEE, WI"
      },
      {
        "from": [
          "HOTEL CONTINENTAL (PARIS, FRANCE?)",
          "HOTEL CONTINENTAL, [PARIS, FRANCE]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL CONTINENTAL (PARIS, FRANCE?)"
      },
      {
        "from": [
          "TORONTO, CANADA",
          "TORONTO,CANADA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TORONTO, CANADA"
      },
      {
        "from": [
          "FRANKFURT, GERMANY",
          "[FRANKFURT, GERMANY?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRANKFURT, GERMANY"
      },
      {
        "from": [
          "Unknown",
          "unknown"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Unknown"
      },
      {
        "from": [
          "ORMOND, FL",
          "ORMOND, FL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ORMOND, FL"
      },
      {
        "from": [
          "AMSTERDAM,HOLLAND",
          "[AMSTERDAM, HOLLAND ?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMSTERDAM,HOLLAND"
      },
      {
        "from": [
          "METROPOLITAN CLUB, NEW YORK, NY",
          "METROPOLITAN CLUB, [?NEW YORK, NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "METROPOLITAN CLUB, NEW YORK, NY"
      },
      {
        "from": [
          "EN ROUTE ABOARD SS KASUGA MARU",
          "EN ROUTE ABOARD SS. KASUGA MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD SS KASUGA MARU"
      },
      {
        "from": [
          "SS \"FRIEDRICH DER GROSSE\"",
          "SS FRIEDRICH DER GROSSE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS \"FRIEDRICH DER GROSSE\""
      },
      {
        "from": [
          "HELENA, MT",
          "HELENA,MT"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HELENA, MT"
      },
      {
        "from": [
          "GLENWOOD SPRINGS, CO",
          "[GLENWOOD SPRINGS, CO]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GLENWOOD SPRINGS, CO"
      },
      {
        "from": [
          "130 BROADWAY, NEW YORK",
          "130 BROADWAY, [NEW YORK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "130 BROADWAY, NEW YORK"
      },
      {
        "from": [
          "PARK ROW BUILDING [NY]",
          "PARK ROW BUILDING, [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARK ROW BUILDING [NY]"
      },
      {
        "from": [
          "JACKSONVILLE, FL",
          "JACKSONVILLE, FL;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "JACKSONVILLE, FL"
      },
      {
        "from": [
          "ST. AUGUSTINE, FL",
          "ST.AUGUSTINE,FL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. AUGUSTINE, FL"
      },
      {
        "from": [
          "UNION SQUARE, NY",
          "UNION SQUARE,NY;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION SQUARE, NY"
      },
      {
        "from": [
          "THE RALEIGH, WASHINGTON, DC",
          "THE RALEIGH, WASHINGTON DC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE RALEIGH, WASHINGTON, DC"
      },
      {
        "from": [
          "PULLMAN DINING CAR SERVICE EN ROUTE",
          "PULLMAN DINING CAR SERVICE (EN ROUTE?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PULLMAN DINING CAR SERVICE EN ROUTE"
      },
      {
        "from": [
          "EN ROUTE STEAMER AUGUSTE VICTORIA",
          "ENROUTE STEAMER \"AUGUSTE VICTORIA\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE STEAMER AUGUSTE VICTORIA"
      },
      {
        "from": [
          "SS WESTERNLAND, EN ROUTE",
          "SS WESTERNLAND - EN ROUTE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS WESTERNLAND, EN ROUTE"
      },
      {
        "from": [
          "WALDORF-ASTORIA HOTEL, NEW YORK, NY",
          "WALDORF ASTORIA HOTEL, NEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF-ASTORIA HOTEL, NEW YORK, NY"
      },
      {
        "from": [
          "CHAMBERLIN'S, (WASHINGTON,D.C.)",
          "CHAMBERLIN'S; [WASHINGTON,DC?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHAMBERLIN'S, (WASHINGTON,D.C.)"
      },
      {
        "from": [
          "EN ROUTE ABOARD S.S. SOUTHWARK",
          "ENROUTE ABOARD S.S. SOUTHWARK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD S.S. SOUTHWARK"
      },
      {
        "from": [
          "137 E. MADISON ST. CHICAGO, ILL.",
          "137 E. MADISON ST.,CHICAGO,ILL."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "137 E. MADISON ST. CHICAGO, ILL."
      },
      {
        "from": [
          "HOTEL MARLBOROUGH, NEW YORK, NY",
          "HOTEL MARLBOROUGH, [NEW YORK, NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MARLBOROUGH, NEW YORK, NY"
      },
      {
        "from": [
          "BROADWAY, NY",
          "BROADWAY,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BROADWAY, NY"
      },
      {
        "from": [
          "ST.LOUIS CLUB, ST.LOUIS,MO.",
          "ST. LOUIS CLUB, [?ST. LOUIS, MO?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST.LOUIS CLUB, ST.LOUIS,MO."
      },
      {
        "from": [
          "MECHANICS HALL, [BOSTON, MA];",
          "MECHANICS' HALL, BOSTON, MA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MECHANICS HALL, [BOSTON, MA];"
      },
      {
        "from": [
          "57 BROAD ST. NY",
          "57 BROAD ST.NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 BROAD ST. NY"
      },
      {
        "from": [
          "Fairmont Hotel",
          "FAIRMONT HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fairmont Hotel"
      },
      {
        "from": [
          "CHATTANOOGA,TENN.",
          "CHATTANOOGA, TENN."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHATTANOOGA,TENN."
      },
      {
        "from": [
          "HOTEL ASTOR, NEW YORK",
          "HOTEL ASTOR, [NEW YORK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ASTOR, NEW YORK"
      },
      {
        "from": [
          "STEAMSHIP KAISER WILHELM DER GROSSE",
          "STEAMSHIP KAISER WILHELM DER GROSSER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "STEAMSHIP KAISER WILHELM DER GROSSE"
      },
      {
        "from": [
          "HOTEL DEL CAMPIDOGLIO, NEW YORK, NY",
          "HOTEL DEL CAMPIDOGLIO, [NEW YORK, N.Y.]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL DEL CAMPIDOGLIO, NEW YORK, NY"
      },
      {
        "from": [
          "COMMERCIAL CLUB, PORTLAND, OR",
          "COMMERCIAL CLUB, [PORTLAND, OR]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMMERCIAL CLUB, PORTLAND, OR"
      },
      {
        "from": [
          "57 BROAD STREET, NY",
          "57 BROAD STREET - NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 BROAD STREET, NY"
      },
      {
        "from": [
          "NYC",
          "[NYC]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NYC"
      },
      {
        "from": [
          "MURRAY HILL HOTEL,NY",
          "MURRAY HILL HOTEL [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MURRAY HILL HOTEL,NY"
      },
      {
        "from": [
          "CECIL HOTEL, LONDON, ENGLAND",
          "CECIL HOTEL,LONDON,ENGLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CECIL HOTEL, LONDON, ENGLAND"
      },
      {
        "from": [
          "TERRACE GARDEN",
          "TERRACE GARDEN,?"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TERRACE GARDEN"
      },
      {
        "from": [
          "CHICAGO ATHLETIC ASSOCIATION",
          "CHICAGO ATHLETIC ASSOCIATION;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CHICAGO ATHLETIC ASSOCIATION"
      },
      {
        "from": [
          "ABOARD PAQUEBOT LA PROVENCE",
          "ABOARD PAQUEBOT \"LA PROVENCE\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD PAQUEBOT LA PROVENCE"
      },
      {
        "from": [
          "SPRINGFIELD,MASS.",
          "SPRINGFIELD, MASS."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SPRINGFIELD,MASS."
      },
      {
        "from": [
          "ACADEMY OF MUSIC BROOKLYN, NY",
          "ACADEMY OF MUSIC, [BROOKLYN, NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ACADEMY OF MUSIC BROOKLYN, NY"
      },
      {
        "from": [
          "ALBANY, NY",
          "ALBANY,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALBANY, NY"
      },
      {
        "from": [
          "AUDITORIUM, CHICAGO, IL",
          "AUDITORIUM,[CHICAGO, IL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AUDITORIUM, CHICAGO, IL"
      },
      {
        "from": [
          "PALACE HOTEL, DENVER, [COL]",
          "PALACE HOTEL;DENVER, [COL]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PALACE HOTEL, DENVER, [COL]"
      },
      {
        "from": [
          "CORONADO BEACH, CA",
          "CORONADO BEACH, CA;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CORONADO BEACH, CA"
      },
      {
        "from": [
          "BWAY & 63RD ST. NY",
          "B'WAY & 63RD ST. NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BWAY & 63RD ST. NY"
      },
      {
        "from": [
          "COLUMBUS, OHIO",
          "COLUMBUS,OHIO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COLUMBUS, OHIO"
      },
      {
        "from": [
          "DELMONICO, [NEW YORK, NY?]",
          "DELMONICO,NEW YORK NY;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO, [NEW YORK, NY?]"
      },
      {
        "from": [
          "UNION LEAGUE CLUB NY;",
          "UNION LEAGUE CLUB, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION LEAGUE CLUB NY;"
      },
      {
        "from": [
          "HOFFMAN HOUSE, MADISON SQUARE, NY",
          "[HOFFMAN HOUSE,MADISON SQUARE,NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOFFMAN HOUSE, MADISON SQUARE, NY"
      },
      {
        "from": [
          "MINNEAPOLIS CLUB, MINNEAPOLIS, MN",
          "MINNEAPOLIS CLUB; MINNEAPOLIS, MN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MINNEAPOLIS CLUB, MINNEAPOLIS, MN"
      },
      {
        "from": [
          "HORTICULTURAL HALL, PHILADELPHIA, PA",
          "HORTICULTURAL HALL, PHILADELPHIA [PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HORTICULTURAL HALL, PHILADELPHIA, PA"
      },
      {
        "from": [
          "TREMONT TEMPLE, BOSTON, MASS.",
          "TREMONT TEMPLE,BOSTON MASS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TREMONT TEMPLE, BOSTON, MASS."
      },
      {
        "from": [
          "GERMANTOWN (PA?)",
          "[GERMANTOWN, PA?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GERMANTOWN (PA?)"
      },
      {
        "from": [
          "DEEMING HALL, ITHACA, NY",
          "DEEMING HALL,ITHACA,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DEEMING HALL, ITHACA, NY"
      },
      {
        "from": [
          "EN ROUTE ABOARD S.S. FRIESLAND",
          "EN ROUTE ABOARD SS FRIESLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD S.S. FRIESLAND"
      },
      {
        "from": [
          "WALDORF-ASTORIA",
          "Waldorf-Astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF-ASTORIA"
      },
      {
        "from": [
          "LINCOLN CLUB {bROOKLYN, NY}",
          "LINCOLN CLUB,BROOKLYN,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LINCOLN CLUB {bROOKLYN, NY}"
      },
      {
        "from": [
          "114 WEST FOURTEENTH STREET, NEW YORK",
          "114 WEST FOURTEENTH STREET, [NEW YORK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "114 WEST FOURTEENTH STREET, NEW YORK"
      },
      {
        "from": [
          "GRAND PACIFIC HOTEL",
          "GRAND PACIFIC HOTEL,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND PACIFIC HOTEL"
      },
      {
        "from": [
          "EN ROUTE ABOARD SS.KOHE MARU",
          "EN ROUTE ABOARD SS. KOHE MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD SS.KOHE MARU"
      },
      {
        "from": [
          "FARGO, NORTH DAKOTA",
          "FARGO,NORTH DAKOTA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FARGO, NORTH DAKOTA"
      },
      {
        "from": [
          "DAMPFER; H.H. MEIER",
          "DAMPFER \"H.H. MEIER\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAMPFER; H.H. MEIER"
      },
      {
        "from": [
          "STEAMSHIP NORTH WEST",
          "STEAMSHIP NORTHWEST"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "STEAMSHIP NORTH WEST"
      },
      {
        "from": [
          "139 EIGHTH STREET BET. BROADWAY AND 4TH AVE., NEW YORK [NY];",
          "139 EIGHTH STREET, BET. BROADWAY AND 4TH AVE., NEW YORK, [NY];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "139 EIGHTH STREET BET. BROADWAY AND 4TH AVE., NEW YORK [NY];"
      },
      {
        "from": [
          "BANGKOK, THAILAND",
          "BANGKOK, [THAILAND]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BANGKOK, THAILAND"
      },
      {
        "from": [
          "LUCERNE,SWITZERLAND",
          "[LUCERNE,SWITZERLAND?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LUCERNE,SWITZERLAND"
      },
      {
        "from": [
          "374 FIFTH AVENUE, [NY,NY]",
          "[374 FIFTH AVENUE, NY, NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "374 FIFTH AVENUE, [NY,NY]"
      },
      {
        "from": [
          "DAMPFER KAISER WILHELM DER GROSSE;",
          "DAMPFER \"KAISER WILHELM DER GROSSE\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DAMPFER KAISER WILHELM DER GROSSE;"
      },
      {
        "from": [
          "MANHATTAN BEACH, LONG ISLAND [NY]",
          "MANHATTAN BEACH, LONG ISLAND, [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MANHATTAN BEACH, LONG ISLAND [NY]"
      },
      {
        "from": [
          "BOHEMIAN CLUB, SAN FRANCISCO, CA",
          "BOHEMIAN CLUB, SAN FRANCISCO,[CA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BOHEMIAN CLUB, SAN FRANCISCO, CA"
      },
      {
        "from": [
          "ST. NICHOLAS HOTEL, [CINCINNATI, OH?]",
          "ST.NICHOLAS HOTEL, CINCINNATI, OH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. NICHOLAS HOTEL, [CINCINNATI, OH?]"
      },
      {
        "from": [
          "U.S.M.S. NEW YORK",
          "USMS NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. NEW YORK"
      },
      {
        "from": [
          "HOTEL MANHATTAN, NEW YORK",
          "HOTEL MANHATTAN, [NEW YORK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MANHATTAN, NEW YORK"
      },
      {
        "from": [
          "NEW WILLARD [WASHINGTON, [DC]",
          "NEW WILLARD, WASHINGTON, DC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW WILLARD [WASHINGTON, [DC]"
      },
      {
        "from": [
          "UNION CLUB",
          "UNION CLUB, (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION CLUB"
      },
      {
        "from": [
          "THE COCHRAN, WASHINGTON, DC",
          "THE COCHRAN, WASHINGTON,D.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE COCHRAN, WASHINGTON, DC"
      },
      {
        "from": [
          "ARCANUM HALL,ELIZABETH NJ",
          "ARCANUM HALL,ELIZABETH,NJ"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ARCANUM HALL,ELIZABETH NJ"
      },
      {
        "from": [
          "EN ROUTE ABOARD DAMPFER H.H. MEIER",
          "EN ROUTE ABOARD DAMPFER H.H.MEIER"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD DAMPFER H.H. MEIER"
      },
      {
        "from": [
          "ADIRONDACKS, NY",
          "ADIRONDACKS [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ADIRONDACKS, NY"
      },
      {
        "from": [
          "GERMANY(?)",
          "[GERMANY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GERMANY(?)"
      },
      {
        "from": [
          "EN ROUTE ABOARD ABOVE",
          "EN ROUTE ABOARD ABOVE (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD ABOVE"
      },
      {
        "from": [
          "THE WALNUT ROOMS, THE GRAND HOTEL, TRAFALGAR SQUARE, LONDON, ENGLAND",
          "THE WALNUT ROOMS; THE GRAND HOTEL, TRAFALGAR SQUARE, [LONDON,ENGLAND]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE WALNUT ROOMS, THE GRAND HOTEL, TRAFALGAR SQUARE, LONDON, ENGLAND"
      },
      {
        "from": [
          "ROUND TABLE CLUB",
          "[ROUND TABLE CLUB]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ROUND TABLE CLUB"
      },
      {
        "from": [
          "EN ROUTE ABOARD SS. KASUGA",
          "EN ROUTE ABOARD SS KASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD SS. KASUGA"
      },
      {
        "from": [
          "EN ROUTE ABOARD SS. KINSHIN MARU",
          "EN ROUTE ABOARD SS.KINSHIN MARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD SS. KINSHIN MARU"
      },
      {
        "from": [
          "SS TRINIDAD",
          "S.S. \"TRINIDAD\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SS TRINIDAD"
      },
      {
        "from": [
          "GRAND HOTEL, MELBOURNE;",
          "GRAND HOTEL,MELBOURNE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND HOTEL, MELBOURNE;"
      },
      {
        "from": [
          "PENN.",
          "PENN;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PENN."
      },
      {
        "from": [
          "HOTEL SAVOY, NEW YORK, NY",
          "HOTEL SAVOY,NEW YORK,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SAVOY, NEW YORK, NY"
      },
      {
        "from": [
          "NEW HAVEN CT",
          "NEW HAVEN [CT]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW HAVEN CT"
      },
      {
        "from": [
          "ABOARD S S VADERLAND",
          "ABOARD S.S. VADERLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD S S VADERLAND"
      },
      {
        "from": [
          "S.S. ZEALANDIA",
          "SS ZEALANDIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. ZEALANDIA"
      },
      {
        "from": [
          "MIAMI BISCAYNE BAY, FL",
          "MIAMI BISCAYNE BAY,FL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MIAMI BISCAYNE BAY, FL"
      },
      {
        "from": [
          "DWLMONICO'S NY",
          "DWLMONICO'S,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DWLMONICO'S NY"
      },
      {
        "from": [
          "WEST END HOTEL, NEW ORLEANS, LA",
          "WEST END HOTEL, NEW ORLEANS,LA."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WEST END HOTEL, NEW ORLEANS, LA"
      },
      {
        "from": [
          "FAIRMONT HOTEL [SAN FRANCISCO, CA]",
          "FAIRMONT HOTEL, SAN FRANCISCO, CA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FAIRMONT HOTEL [SAN FRANCISCO, CA]"
      },
      {
        "from": [
          "DELMONICO'S",
          "Delmonicos"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S"
      },
      {
        "from": [
          "SHANLEY'S, NY",
          "SHANLEY'S,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SHANLEY'S, NY"
      },
      {
        "from": [
          "PALAIS ROYAL - CHRISTIANIA,NORWAY",
          "[PALAIS ROYAL, CHRISTIANIA, NORWAY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PALAIS ROYAL - CHRISTIANIA,NORWAY"
      },
      {
        "from": [
          "BRUNSWICK,THE,BOSTON,[MASS]",
          "BRUNSWICK,THE,BOSTON[MASS]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BRUNSWICK,THE,BOSTON,[MASS]"
      },
      {
        "from": [
          "ALBANY CLUB (ALBANY,NY)",
          "ALBANY CLUB, ALBANY, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ALBANY CLUB (ALBANY,NY)"
      },
      {
        "from": [
          "PINEHURST,N.C.",
          "PINEHURST, NC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PINEHURST,N.C."
      },
      {
        "from": [
          "HOTEL ST. GEORGE, NYACK, NY",
          "HOTEL ST. GEORGE,NYACK,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ST. GEORGE, NYACK, NY"
      },
      {
        "from": [
          "383 6TH AVE.,1212 BWAY.,& 1476 BWAY. NY",
          "383 6TH AVE.,1476 BWAY.,1212 BWAY., NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "383 6TH AVE.,1212 BWAY.,& 1476 BWAY. NY"
      },
      {
        "from": [
          "HOTEL MARLBOROUGH",
          "HOTEL MARLBOROUGH, (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MARLBOROUGH"
      },
      {
        "from": [
          "NASHVILLE, TENN.",
          "NASHVILLE, TENN;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NASHVILLE, TENN."
      },
      {
        "from": [
          "CATARACT HOUSE, NIAGARA FALLS, NY",
          "CATARACT HOUSE,NIAGARA FALLS,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CATARACT HOUSE, NIAGARA FALLS, NY"
      },
      {
        "from": [
          "TAYLOR'S HOTEL, JERSEY CITY [NJ]",
          "TAYLOR'S HOTEL, JERSEY CITY, N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TAYLOR'S HOTEL, JERSEY CITY [NJ]"
      },
      {
        "from": [
          "ST. DENIS HOTEL",
          "ST. DENIS HOTEL, (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. DENIS HOTEL"
      },
      {
        "from": [
          "TAMPA, FLORIDA",
          "TAMPA,FLORIDA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TAMPA, FLORIDA"
      },
      {
        "from": [
          "ABOARD PAQUEBOT LA LORRAINE",
          "ABOARD PAQUEBOT \"LA LORRAINE\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD PAQUEBOT LA LORRAINE"
      },
      {
        "from": [
          "ABOARD PAQUEBOT \"LA SAVOIE\"",
          "ABOARD PAQUEBOT LA SAVOIE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD PAQUEBOT \"LA SAVOIE\""
      },
      {
        "from": [
          "ABOARD 'PRINZ FRIEDRICH WILHELM'",
          "ABOARD PRINZ FRIEDRICH WILHELM''"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD 'PRINZ FRIEDRICH WILHELM'"
      },
      {
        "from": [
          "SIXTY-SIXTH STREET & BROADWAY, NEW YORK, [NY]",
          "SIXTY SIXTH STREET & BROADWAY, NEW YORK,[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SIXTY-SIXTH STREET & BROADWAY, NEW YORK, [NY]"
      },
      {
        "from": [
          "RECTOR'S ,NY",
          "RECTOR'S,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RECTOR'S ,NY"
      },
      {
        "from": [
          "NEW YORK CITY, DELMONICO'S",
          "NEW YORK CITY; DELMONICO'S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK CITY, DELMONICO'S"
      },
      {
        "from": [
          "BAR HARBOR [ME]",
          "BAR HARBOR, ME"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BAR HARBOR [ME]"
      },
      {
        "from": [
          "SCHNELLDAMPFER \"AUGUSTE VICTORIA\"",
          "SCHNELLDAMPFER: \"AUGUSTE VICTORIA\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SCHNELLDAMPFER \"AUGUSTE VICTORIA\""
      },
      {
        "from": [
          "BELMAR,NJ",
          "BELMAR, NJ"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BELMAR,NJ"
      },
      {
        "from": [
          "AZ",
          "[AZ]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AZ"
      },
      {
        "from": [
          "HOTEL STENTON [PHILADELPHIA PA]",
          "HOTEL STENTON, PHILADELPHIA, PA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL STENTON [PHILADELPHIA PA]"
      },
      {
        "from": [
          "BAKER CITY, OREGON;",
          "BAKER CITY,OREGON"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BAKER CITY, OREGON;"
      },
      {
        "from": [
          "MIRAMAR (?)",
          "[MIRAMAR?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MIRAMAR (?)"
      },
      {
        "from": [
          "SARATOGA, NY",
          "SARATOGA, [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SARATOGA, NY"
      },
      {
        "from": [
          "CONVENTION HALL, (BUFFALO, NY?)",
          "CONVENTION HALL, BUFFALO, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CONVENTION HALL, (BUFFALO, NY?)"
      },
      {
        "from": [
          "BUTLER, PA",
          "BUTLER, PA."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BUTLER, PA"
      },
      {
        "from": [
          "66TH ST. & BWAY NY",
          "66TH ST & B'WAY, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66TH ST. & BWAY NY"
      },
      {
        "from": [
          "\"ST. LOUIS\"",
          "\"ST.LOUIS\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "\"ST. LOUIS\""
      },
      {
        "from": [
          "NIAGARA FALLS, NY",
          "NIAGARA FALLS,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NIAGARA FALLS, NY"
      },
      {
        "from": [
          "HOTEL VICTORY, PUT-IN-BAY-ISLAND, LAKE ERIE, OH.",
          "HOTEL VICTORY,PUT-IN-BAY ISLAND,LAKE ERIE,OH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL VICTORY, PUT-IN-BAY-ISLAND, LAKE ERIE, OH."
      },
      {
        "from": [
          "PARK ROW BUILDING [NEW YORK,NY?]",
          "PARK ROW BUILDING, NEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARK ROW BUILDING [NEW YORK,NY?]"
      },
      {
        "from": [
          "DELMONICO,[NY]",
          "DELMONICO [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO,[NY]"
      },
      {
        "from": [
          "NEW YORK CITY, NY",
          "NEW YORK CITY,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK CITY, NY"
      },
      {
        "from": [
          "66TH STREET AND BROADWAY,NEW YORK,NY",
          "[66TH STREET AND BROADWAY,NEW YORK,NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66TH STREET AND BROADWAY,NEW YORK,NY"
      },
      {
        "from": [
          "UNION SQUARE, NEW YORK, NY",
          "UNION SQUARE,NEW YORK,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "UNION SQUARE, NEW YORK, NY"
      },
      {
        "from": [
          "ABOARD SS KAMAKURA MARU",
          "ABOARD SS KAMAKURA MARU;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD SS KAMAKURA MARU"
      },
      {
        "from": [
          "THE BOURSE, PHILADELPHIA [PA]",
          "THE BOURSE,(PHILADELPHIA,PA)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE BOURSE, PHILADELPHIA [PA]"
      },
      {
        "from": [
          "PARKER HOUSE, BOSTON, MA",
          "PARKER HOUSE,BOSTON,MA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARKER HOUSE, BOSTON, MA"
      },
      {
        "from": [
          "WINDSOR CASTLE, ENGLAND",
          "WINDSOR CASTLE, [ENGLAND]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WINDSOR CASTLE, ENGLAND"
      },
      {
        "from": [
          "RMS OCEANIC",
          "R.M.S. OCEANIC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RMS OCEANIC"
      },
      {
        "from": [
          "PALM BEACH, FL",
          "PALM BEACH,FL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PALM BEACH, FL"
      },
      {
        "from": [
          "YOUNG'S HOTEL",
          "YOUNG'S HOTEL [?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "YOUNG'S HOTEL"
      },
      {
        "from": [
          "ABOARD PAQUEBOT LA TOURAINE",
          "ABOARD PAQUEBOT \"LA TOURAINE\""
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD PAQUEBOT LA TOURAINE"
      },
      {
        "from": [
          "EN ROUTE ABOARD S.S. \"KOBE WARU\"",
          "EN ROUTE ABOARD S.S. KOBE WARU"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD S.S. \"KOBE WARU\""
      },
      {
        "from": [
          "BATTLE CREEK, MI",
          "BATTLE CREEK, MI;"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BATTLE CREEK, MI"
      },
      {
        "from": [
          "(CALIFORNIA?)",
          "CALIFORNIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "(CALIFORNIA?)"
      },
      {
        "from": [
          "MUNICH, GERMANY",
          "MUNICH,GERMANY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MUNICH, GERMANY"
      },
      {
        "from": [
          "156 SECOND AVENUE (NY?)",
          "156 SECOND AVENUE, [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "156 SECOND AVENUE (NY?)"
      },
      {
        "from": [
          "ST. DENIS HOTEL (NEW YORK?)",
          "ST. DENIS HOTEL, NEW YORK"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. DENIS HOTEL (NEW YORK?)"
      },
      {
        "from": [
          "WALDORF [NY]",
          "WALDORF[NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF [NY]"
      },
      {
        "from": [
          "REVERE HOUSE, [BOSTON,MASS]",
          "REVERE HOUSE,BOSTON,MASS."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "REVERE HOUSE, [BOSTON,MASS]"
      },
      {
        "from": [
          "NASSAU,BAHAMAS",
          "NASSAU, BAHAMAS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NASSAU,BAHAMAS"
      },
      {
        "from": [
          "RUSSELL HOUSE, DETROIT, MI",
          "RUSSELL HOUSE; DETROIT, MI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "RUSSELL HOUSE, DETROIT, MI"
      },
      {
        "from": [
          "ABOARD PAQUEBOT \"LA BRETAGNE\"",
          "ABOARD PAQUEBOT LA BRETAGNE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD PAQUEBOT \"LA BRETAGNE\""
      },
      {
        "from": [
          "NOS. 667 TO 677 [BROADWAY], OPPOSITE BOND STREET, MIDWAY BETWEEN BATTERY AND CENTRAL PARK, NEW YORK [NY];",
          "NOS. 667 TO 677 [BROADWAY], OPPOSITE BOND STREET, MIDWAY BETWEEN BATTERY AND CENTRAL PARK, NEW YORK, [NY];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NOS. 667 TO 677 [BROADWAY], OPPOSITE BOND STREET, MIDWAY BETWEEN BATTERY AND CENTRAL PARK, NEW YORK [NY];"
      },
      {
        "from": [
          "EN ROUTE ABOARD EXPRESS STEAMER AUGUSTE VICTORIA",
          "ENROUTE ABOARD EXPRESS-STEAMER AUGUSTE VICTORIA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EN ROUTE ABOARD EXPRESS STEAMER AUGUSTE VICTORIA"
      },
      {
        "from": [
          "FRANCONIA NOTCH NH",
          "FRANCONIA NOTCH NH,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FRANCONIA NOTCH NH"
      },
      {
        "from": [
          "QUEEN CITY CLUB, (CINCINNATI,OHIO)",
          "QUEEN CITY CLUB, CINCINNATI ,OHIO"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "QUEEN CITY CLUB, (CINCINNATI,OHIO)"
      },
      {
        "from": [
          "MAXWELL HOUSE, NASHVILLE, [TN];",
          "MAXWELL HOUSE, NASHVILLE, TN"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MAXWELL HOUSE, NASHVILLE, [TN];"
      },
      {
        "from": [
          "CAMPOBELLO ISLAND",
          "CAMPOBELLO ISLAND,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CAMPOBELLO ISLAND"
      },
      {
        "from": [
          "EAGLE HOTEL (GETTYSBURG, PA?)",
          "EAGLE HOTEL, GETTYSBURG, PA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "EAGLE HOTEL (GETTYSBURG, PA?)"
      },
      {
        "from": [
          "LINCOLN CLUB - NY",
          "LINCOLN CLUB [NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LINCOLN CLUB - NY"
      },
      {
        "from": [
          "ASHEVILLE,NC",
          "ASHEVILLE, NC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ASHEVILLE,NC"
      },
      {
        "from": [
          "MALONE, NY",
          "MALONE,NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MALONE, NY"
      },
      {
        "from": [
          "HOTEL VENDOME, BOSTON,MASS",
          "HOTEL VENDOME; [BOSTON, MASS]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL VENDOME, BOSTON,MASS"
      },
      {
        "from": [
          "FARGO, ND",
          "FARGO,ND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "FARGO, ND"
      },
      {
        "from": [
          "MAGDEBURG, [GERMANY?]",
          "MAGDEBURG,[GERMANY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MAGDEBURG, [GERMANY?]"
      },
      {
        "from": [
          "WATSON HOUSE, BABLON, L.I., N.Y.",
          "WATSON HOUSE,BABLON, L.I. N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WATSON HOUSE, BABLON, L.I., N.Y."
      },
      {
        "from": [
          "AUDITORIUM",
          "AUDITORIUM, (?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AUDITORIUM"
      },
      {
        "from": [
          "MOBILE,AL.",
          "MOBILE; AL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MOBILE,AL."
      },
      {
        "from": [
          "Park Lane",
          "Park lane"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Lane"
      },
      {
        "from": [
          "AMERICAN INN, PORTLAND OR",
          "AMERICAN INN, PORTLAND,OR"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "AMERICAN INN, PORTLAND OR"
      },
      {
        "from": [
          "LAKE GEORGE,NY",
          "[LAKE GEORGE, NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "LAKE GEORGE,NY"
      },
      {
        "from": [
          "HOTEL PFISTER, MILWAUKEE, WI",
          "HOTEL PFISTER, MILWAUKEE WI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL PFISTER, MILWAUKEE, WI"
      },
      {
        "from": [
          "PARKER HOUSE, MASS;",
          "PARKER HOUSE,[MASS]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARKER HOUSE, MASS;"
      },
      {
        "from": [
          "GRAND PACIFIC HOTEL, CHICAGO, IL",
          "GRAND PACIFIC HOTEL [CHICAGO, IL];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "GRAND PACIFIC HOTEL, CHICAGO, IL"
      },
      {
        "from": [
          "BRUNSWICK ME?",
          "BRUNSWICK,ME."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BRUNSWICK ME?"
      },
      {
        "from": [
          "ABOARD SS KASUGA;",
          "ABOARD SS KASUGA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ABOARD SS KASUGA;"
      },
      {
        "from": [
          "PAWLING, NY",
          "PAWLING NY(?)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PAWLING, NY"
      },
      {
        "from": [
          "HOTEL BRUNSWICK, BOSTON, MA",
          "HOTEL BRUNSWICK, BOSTON [MA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL BRUNSWICK, BOSTON, MA"
      },
      {
        "from": [
          "Hotel St. Francis",
          "HOTEL ST. FRANCIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. Francis"
      },
      {
        "from": [
          "BUDAPEST, HUNGARY",
          "BUDAPEST, (HUNGARY)"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BUDAPEST, HUNGARY"
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "ASTOR HOTEL, NEW YORK, NY",
          "HOTEL ASTOR, NEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ASTOR HOTEL, NEW YORK, NY"
      },
      {
        "from": [
          "HOTEL PFISTER, MILWAUKEE, WI",
          "PFISTER HOTEL, MILWAUKEE, WI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL PFISTER, MILWAUKEE, WI"
      },
      {
        "from": [
          "SAVOY HOTEL, NEW YORK, NY",
          "HOTEL SAVOY, NEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "SAVOY HOTEL, NEW YORK, NY"
      },
      {
        "from": [
          "HOTEL BELLEVUE-STRATFORD [PHILADELPHIA, PA]",
          "BELLEVUE-STRATFORD HOTEL, PHILADELPHIA, PA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL BELLEVUE-STRATFORD [PHILADELPHIA, PA]"
      },
      {
        "from": [
          "Gramercy Park Hotel",
          "Hotel Gramercy Park"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gramercy Park Hotel"
      },
      {
        "from": [
          "PARK ROW BLDG. [NY]",
          "PARK ROW BLDG., [NY, NY]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "PARK ROW BLDG. [NY]"
      },
      {
        "from": [
          "HOTEL JEFFERSON, ST. LOUIS, MO",
          "JEFFERSON HOTEL, ST. LOUIS [MO]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL JEFFERSON, ST. LOUIS, MO"
      },
      {
        "from": [
          "THE NEW WILLARD, WASHINGTON, DC",
          "NEW WILLARD, THE, WASHINGTON, DC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE NEW WILLARD, WASHINGTON, DC"
      },
      {
        "from": [
          "The Plaza",
          "PLAZA, THE"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Plaza"
      },
      {
        "from": [
          "HOTEL BRUNSWICK NY",
          "BRUNSWICK HOTEL [NY?]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL BRUNSWICK NY"
      },
      {
        "from": [
          "ST. DENIS HOTEL",
          "HOTEL ST. DENIS"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. DENIS HOTEL"
      },
      {
        "from": [
          "HOTEL MAJESTIC [PHILADELPHIA, PA]",
          "MAJESTIC HOTEL, PHILADELPHIA. PA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MAJESTIC [PHILADELPHIA, PA]"
      },
      {
        "from": [
          "Hotel Gramercy Park; 52 Gramercy Park North",
          "Gramercy Park Hotel; Hotel Gramercy Park; 52 Gramercy Park North"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Gramercy Park; 52 Gramercy Park North"
      },
      {
        "from": [
          "HOTEL ZINZENDORF, WINSTON-SALEM, NC",
          "ZINZENDORF HOTEL, WINSTON-SALEM, NC"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ZINZENDORF, WINSTON-SALEM, NC"
      },
      {
        "from": [
          "THE TEN EYCK, ALBANY, NY",
          "TEN EYCK, THE, ALBANY, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE TEN EYCK, ALBANY, NY"
      },
      {
        "from": [
          "HOTEL MAJESTIC",
          "MAJESTIC HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MAJESTIC"
      },
      {
        "from": [
          "HOTEL ASTOR",
          "ASTOR HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ASTOR"
      },
      {
        "from": [
          "BELLEVUE HOTEL, PHILADELPHIA, PA",
          "HOTEL BELLEVUE, PHILADELPHIA [PA]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "BELLEVUE HOTEL, PHILADELPHIA, PA"
      },
      {
        "from": [
          "HOTEL BRUNSWICK, BOSTON, MA",
          "BRUNSWICK HOTEL, BOSTON, MA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL BRUNSWICK, BOSTON, MA"
      },
      {
        "from": [
          "MANHATTAN HOTEL, NEW YORK, NY",
          "HOTEL MANHATTAN, NEW YORK, [NY];"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MANHATTAN HOTEL, NEW YORK, NY"
      },
      {
        "from": [
          "HOTEL MARLBOROUGH, NEW YORK, NY",
          "MARLBOROUGH HOTEL, NEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL MARLBOROUGH, NEW YORK, NY"
      },
      {
        "from": [
          "COMMERCIAL CLUB, PORTLAND, OR",
          "PORTLAND COMMERCIAL CLUB, PORTLAND, OR"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "COMMERCIAL CLUB, PORTLAND, OR"
      },
      {
        "from": [
          "THE WELLINGTON, PROVIDENCE RI",
          "WELLINGTON, THE, PROVIDENCE, RI"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE WELLINGTON, PROVIDENCE RI"
      },
      {
        "from": [
          "NEW YORK ATHLETIC CLUB",
          "NEW YORK ATHLETIC CLUB, [NEW YORK]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "NEW YORK ATHLETIC CLUB"
      },
      {
        "from": [
          "HOTEL BELLEVUE",
          "BELLEVUE HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL BELLEVUE"
      },
      {
        "from": [
          "DELMONICO'S, NEW YORK CITY",
          "NEW YORK CITY, DELMONICO'S"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "DELMONICO'S, NEW YORK CITY"
      },
      {
        "from": [
          "HOTEL ST. GEORGE, NYACK, NY",
          "ST. GEORGE HOTEL, NYACK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL ST. GEORGE, NYACK, NY"
      },
      {
        "from": [
          "CECIL HOTEL, LONDON, ENGLAND",
          "HOTEL CECIL, LONDON, ENGLAND"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "CECIL HOTEL, LONDON, ENGLAND"
      },
      {
        "from": [
          "HOTEL VENDOME, BOSTON, MA",
          "VENDOME HOTEL, BOSTON, MA"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL VENDOME, BOSTON, MA"
      },
      {
        "from": [
          "HOTEL WILLARD, WASHINGTON, DC",
          "WILLARD HOTEL, [WASHINGTON, DC]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL WILLARD, WASHINGTON, DC"
      },
      {
        "from": [
          "ARGYLE, THE, BROOKLYN, NY",
          "THE ARGYLE, BROOKLYN, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ARGYLE, THE, BROOKLYN, NY"
      },
      {
        "from": [
          "MARLBOROUGH HOTEL, (?)",
          "HOTEL MARLBOROUGH"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "MARLBOROUGH HOTEL, (?)"
      },
      {
        "from": [
          "THE AUDITORIUM [CHICAGO, IL]",
          "AUDITORIUM, THE, CHICAGO, IL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "THE AUDITORIUM [CHICAGO, IL]"
      },
      {
        "from": [
          "ST. DENIS HOTEL; NY",
          "HOTEL ST. DENIS, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "ST. DENIS HOTEL; NY"
      },
      {
        "from": [
          "TONTINE HOTEL, NEW HAVEN, CT",
          "NEW TONTINE HOTEL, NEW HAVEN [CT]"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "TONTINE HOTEL, NEW HAVEN, CT"
      },
      {
        "from": [
          "HOTEL SAVOY",
          "SAVOY HOTEL"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "HOTEL SAVOY"
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "WALDORF-ASTORIA, NEW YORK",
          "WALDORF-ASTORIA",
          "WALDORF ASTORIA, NY",
          "WALDORF-ASTORIA HOTEL, NEW YORK, NY",
          "WALDORF-ASTORIA, NEW YORK CITY",
          "WALDORF-ASTORIA, NEW YORK, NY",
          "WALDORF-ASTORIA, THE, NEW YORK, NY",
          "WALDORF-ASTORIA HOTEL",
          "WALDORF ASTORIA, THE",
          "WALDORF ASTORIA, THE, [NY,NY]",
          "WALDORF-ASTORIA HOTEL, THE, NEW YORK, NY"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "WALDORF-ASTORIA, NEW YORK"
      }
    ],
    "description": "Mass edit cells in column place"
  }
]